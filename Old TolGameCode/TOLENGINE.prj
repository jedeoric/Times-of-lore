'TOL GAME ENGINE V2.0



&GAME_DRIVER
	SEI
	LDA #$31
	STA BB80
	LDA #B7
	STA 3F
	JSR &SWAP_PAGES_02
	JSR &REFRESH_VIEW
&TLP_01	JSR &RAM_KEYBOARD
	JSR &RESERVE_AD
	JSR &MANAGE_HERO_CONTROLS
	JSR &MOVE_IF_APPLICABLE	'IF 020A-D <> ?? THEN SCROLL BGB
	JSR &BGB_2_PSB
	JSR &PLOT_CREATURES
	JSR &PLOT_HERO

'	JSR &CHECK_CREATURES
'	JSR &MOVE_CREATURES
'	JSR &MANAGE_OBJECTS
	JSR &PSB_COLOURS
	JSR &PSB_2_RSN
	JSR &ANIMATION
	JSR &PLOT_XYC
	LDA 0210
	CMP #"E"
	BNE &TLP_01
	JSR &SWAP_PAGES_02
	CLI
	RTS

&PLOT_XYC	LDA 020B
	JSR &CALC_HEX
	STX BEA3
	STA BEA4
	LDA 020A
	JSR &CALC_HEX
	STX BEA5
	STA BEA6
	LDA 020D
	JSR &CALC_HEX
	STX BECB
	STA BECC
	LDA 020C
	JSR &CALC_HEX
	STX BECD
	STA BECE
	LDA 0219
	LSR
	LSR
	LSR
	ADC #$48
	STA BEF3
	RTS

&CALC_HEX	PHA
	LSR
	LSR
	LSR
	LSR
	ORA #30
	CMP #3A
	BCC 02
	ADC #06
	TAX
	PLA
	AND #0F
	ORA #30
	CMP #3A
	BCC 02
	ADC #06
	RTS




&ANIMATION
	LDY #$31
&ANIM_01	LDA B540,Y
	ASL
	CMP #40
	ADC #00
	AND #3F
	STA B540,Y
	DEY
	BPL &ANIM_01
	RTS



&PLOT_HERO
	LDA 0217	'Fetch Hero direction
	ASL     	'*3
	ADC 0217
	ADC 0218	'Add hero frame (0-2)
	PHA
	JSR &CALC_SPRITE_ADDRESS	'BMP
	STA 3C
	STX 3D
	PLA
	ORA #10
	JSR &CALC_SPRITE_ADDRESS	'MSK
	STA 3A
	STX 3B
	LDA #75
	LDX #A7
	JSR &POPULATE_BGC_BUFFER
	LDA 0220
	BNE &PHR_10
	LDY #$71	'PLOT NORMAL HERO
&PHR_01	LDA AB00,Y	'BGC
&PHR_02	AND (3A),Y	'MSK 3A
&PHR_03	ORA (3C),Y	'BMP 3C
	STA B700,Y	'CHS
	DEY
	BPL &PHR_01
&PHR_12	LDA #$96
	CLC
	LDX #08
&PHR_04	LDY AAE1,X
	STA A775,Y
	ADC #01
	DEX
	BPL &PHR_04
	RTS
&PHR_10	LDY #$71	'PLOT PAINED HERO
&PHR_11	LDA (3A),Y
	EOR #FF
	ORA AB00,Y
	STA B700,Y
	DEY
	BPL &PHR_11
	DEC 0220
	JMP &PHR_12

&CALC_SPRITE_ADDRESS
	LDX #00
	STX 19
	JSR &ROLLS_08	'*8
	LDX 19
	STX 01
	STA 00
	JSR &ROLLS_08	'*64
	ADC 00
	PHA
	LDA 19
	ADC 01
	ADC #C0
	TAX
	PLA
	RTS

&POPULATE_BGC_BUFFER
	STA 00
	STX 01
	LDX #08
&PBB_01	LDY AAE1,X
	LDA (00),Y
	CMP #20
	BCC &PBB_04
	ASL
	ASL
	ASL
	STA &PBB_02+1
	LDA #B5
	ADC #00
	STA &PBB_02+2
	TXA
	ASL
	ASL
	ASL
	STA &PBB_03+1
	LDY #07
&PBB_02	LDA BF00,Y
&PBB_03	STA AB00,Y
	DEY
	BPL &PBB_02
&PBB_06	DEX
	BPL &PBB_01
	RTS
&PBB_04	TXA
	ASL
	ASL
	ASL
	STA &PBB_05+1
	LDA #00
	LDY #07
&PBB_05	STA AB00,Y
	DEY
	BPL &PBB_05
	JMP &PBB_06



'	BEQ       '0=UP
'	CMP #02
'	BEQ	'2=DOWN
'	BCC	'1=LEFT
'		'3=RIGHT


&RESERVE_AD
	LDX #03
&RAD_01	LDA 020A,X
	STA 0213,X
	DEX
	BPL &RAD_01
	RTS

&TEMP_LOAD_PAGE2
	SEI
	JSR &SWAP_PAGES_02
	JSR &REFRESH_VIEW
&TLP_01	JSR &RAM_KEYBOARD
	JSR &GAME_CONTROL
	LDA 0210
	CMP #"E"
	BNE &TLP_01
	JSR &SWAP_PAGES_02
	CLI
	RTS

&MANAGE_HERO_CONTROLS
	LDA 0210
	CMP 0203
	BNE 03
	JMP &MOVE_HERO_UP
	CMP 0204
	BNE 03
	JMP &MOVE_HERO_LEFT
	CMP 0205
	BNE 03
	JMP &MOVE_HERO_DOWN
	CMP 0206
	BNE 03
	JMP &MOVE_HERO_RIGHT
	RTS
	CMP 0207
	BNE 03
'	JMP &HERO_FIRE
	CMP 0208
	BNE 03
'	JMP &HERO_ICON
	RTS

&MOVE_HERO_UP
	JSR &ASTORE
	JSR &CLESS_1
	JSR &STORE_COLLISION_X
	JSR &BG_COLLISION_CHECK
	BCC 03
	JMP &SPECIAL_COLLISION
	JSR &GROUND_ZERO_CHECK
	BCS &MHU_01
	LDX #02
&MHU_02	LDA A74A,X
	STA 0219
	CMP #$110
	BCS &MHU_01
	DEX
	BPL &MHU_02
	LDA 020C
	BNE 03
	DEC 020D
	DEC 020C
	JSR &GLOBAL_CREATURES_DOWN
	LDA #00
	STA 0217
&MHU_01	RTS

&MOVE_HERO_LEFT
	JSR &ALESS_1
	JSR &CSTORE
	JSR &STORE_COLLISION_Y
	JSR &BG_COLLISION_CHECK
	BCC 03
	JMP &SPECIAL_COLLISION
	JSR &GROUND_ZERO_CHECK
	BCS &MHL_01
	LDX #02
&MHL_02	LDY AAED,X
	LDA A774,Y
	STA 0219
	CMP #$110
	BCS &MHL_01
	DEX
	BPL &MHL_02
	LDA 020A
	BNE 03
	DEC 020B
	DEC 020A
	JSR &GLOBAL_CREATURES_RIGHT
	LDA #01
	STA 0217
&MHL_01	RTS

&MOVE_HERO_DOWN
	JSR &CPLUS_3 'CHECK REAL MAP FOR COLLISION BELOW-RIGHT: FOR BG COLLISION
	JSR &ASTORE
	JSR &STORE_COLLISION_X
	JSR &BG_COLLISION_CHECK
	BCC 03
	JMP &SPECIAL_COLLISION
	JSR &GROUND_ZERO_CHECK
	BCS &MHD_01
	LDX #02	   'CHECK PSB FOR COLLISION BELOW-RIGHT: FOR CREATURE COLLISIONS
&MHD_02	LDA A7F6,X
	STA 0219
	CMP #$110
	BCS &MHD_01 'CREATURE COLLISION
	DEX
	BPL &MHD_02
	INC 020C
	BNE 03
	INC 020D
	JSR &GLOBAL_CREATURES_UP
	LDA #02
	STA 0217
&MHD_01	RTS


&MOVE_HERO_RIGHT
	JSR &APLUS_3
	JSR &CSTORE
	JSR &STORE_COLLISION_Y
	JSR &BG_COLLISION_CHECK
	BCC 03
	JMP &SPECIAL_COLLISION
	JSR &GROUND_ZERO_CHECK
	BCS &MHR_01
	LDX #02
&MHR_02	LDY AAED,X
	LDA A778,Y
	CMP #$110
	BCS &MHR_01
	DEX
	BPL &MHR_02
	INC 020A
	BNE 03
	INC 020B
	JSR &GLOBAL_CREATURES_LEFT
	LDA #03
	STA 0217
&MHR_01	RTS




&PLOT_HEX	PHA
	STX 09
	JSR &CALC_HEX
	STX BF1B
	STA BF1C
	LDX 09
	PLA
	RTS

&CPLUS_3	LDA 020C
	CLC
	ADC #03
	STA 12
	LDA 020D
	ADC #00
	STA 13
	RTS
&CLESS_1	LDA 020C
	SEC
	SBC #01
	STA 12
	LDA 020D
	SBC #00
	STA 13
	RTS
&CSTORE	LDA 020C
	STA 12
	LDA 020D
	STA 13
	RTS
&APLUS_3	LDA 020A
	CLC
	ADC #03
	STA 10
	LDA 020B
	ADC #00
	STA 11
	RTS
&ALESS_1	LDA 020A
	SEC
	SBC #01
	STA 10
	LDA 020B
	SBC #00
	STA 11
	RTS
&ASTORE	LDA 020A
	STA 10
	LDA 020B
	STA 11
	RTS

&STORE_COLLISION_X
	LDX #02	'FIRST STORE COLLISIONS INTO AAEA-AAEC
&SCX_01	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	AND #%00111000
	LSR
	LSR
	LSR
	STA AAEA,X
	INC 10
	BNE 02
	INC 11
	DEX
	BPL &SCX_01
	RTS

&STORE_COLLISION_Y
	LDX #02
&SCY_01	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	AND #%00111000
	LSR
	LSR
	LSR
	STA AAEA,X
	INC 12
	BNE 02
	INC 13
	DEX
	BPL &SCY_01
	RTS

&BG_COLLISION_CHECK
	LDX #02	'ARE ANY OF THESE COLLISIONS MORE THAN JUST A BUSH OR WALL?
&CCR_04	LDA AAEA,X
	CMP #02
	BCS &CCR_03
	DEX
	BPL &CCR_04
&CCR_03	RTS

&GROUND_ZERO_CHECK
	LDX #02	'ARE ALL COLLISIONS GROUND-ZERO?
&CCR_05	LDA AAEA,X
	CMP #01
	BCS &CCR_02
	DEX
	BPL &CCR_05
&CCR_02	RTS

&SETUP_INSIDE_CREATURES
'	work out current zone position in map
	LDA 020A
	AND #%11100000 'EXCLUDE BLOCK/CHAR DATA,ONLY POSITION IN MAP IMPORTANT
	STA 00
	LDA 020B
	STA 01
	LDA 020C	'Dec YPOS by one: The zone that is being entered
	SEC       'is always above, so we must ensure that even if the
	SBC #01	'Hero is on the Zone below, The building Zone is checked
	AND #%11100000 'EXCLUDE BLOCK/CHAR DATA
	TAY
	LDA 020D
	SBC #00
	STA 03
	TYA	'Some Buildings may extend beyond the Entrance Zone, so...
	SBC AC99,X	'Y_OFFSET,X
	STA 02	'we need to ensure we are looking at the Top-Left zone of the
	BCS 02	'Building. The Y-Offset is a Character length, Not a Zone length
	DEC 03
'We now need to work out what building the Hero is entering....
'If the building is an Inn, then priority will be to plot the Innkeeper.
	TXA
	ASL
'The time of day will have a bearing on who and where people are situated inside.
	ORA 0226		'NIGHT DAY (B0)
'As the game progresses, so the difficulty level should rise, so at night in the Inn,
'All beds should be used.
	ORA 0227		'BUSY FLAG (B3)
'This may be a high priority area and if so, we need to allocate for the High priority
'Creature.
'Since this routine determines all 2 or 3 creatures at once, we don't need to worry about what
'the OTHER creature is doing.
	ORA 0224		'FETCH HIGH PRIORITY FLAG AS 0/16
	TAY
'The result is a value from 0-15 which can index three tables for the relative offset
'of each creature and the actual creatures identity. This will determine all other
'attributes.
'Now fetch Creature 0 (Three always exist but only two are ever visible at once)
'If high priority area, will always contain HP creature.
	LDA #9D
	STA 04
	LDA #AC
	STA 05
	STY 06
	LDX #02	'THE LOOP PROVES TO SAVE AT LEAST 30 BYTES
&SIC_01	LDA 00     'ADD POSITION IN MAP TO...
	ADC (04),Y 'RELATIVE X OFFSET (DESCRIBES POSITION IN ZONE&BLOCK)
	STA 40,X   'AND STORE
	LDA 01     'ADD ANY REMAINDER
	ADC #00
	STA 43,X
	TYA        'Y TABLE IS 32 AHEAD
	ORA #%00100000
	TAY
	LDA 02	 'DO SAME FOR Y...
	ADC (04),Y
	STA 46,X
	LDA 03
	ADC #00
	STA 49,X
	TYA   	 'CREATURE ID IS 64 AHEAD
	EOR #%01100000
	TAY
	LDA (04),Y 'GET CREATURE ID
	STA 4C,X   'AND STORE
	LDY 06
	LDA #60	 'MOVE TO NEXT SET 96 AHEAD
	JSR &ADD_02
	DEX        'NEXT CREATURE
	BPL &SIC_01
	RTS

&FIND_LOW_PRIORITY_CREATURE
	LDA 	'ENVIRONMENT MATRIX BYTE
	AND #0F
	STA 00
	LDA #
	STA 02
	LDX ;NEXT_CREATURE
&FLPC_03	TXA
	ASL
	ASL
	ASL
	STA 01
	LDY #00
	LDA (01),Y
	BMI &FLPC_01	'HP
	LDY #07
	LDA (00),Y
	AND #0F
	CMP 00
	BEQ &FLPC_05
&FLPC_01	DEX
	BPL &FLPC_02
	LDX #0F
&FLPC_02	CPX ;NEXT_CREATURE
	BNE &FLPC_03
	DEC ;NEXT_CREATURE
	BPL &FLPC_04
	LDA #0F
&FLPC_04	STA ;NEXT_CREATURE
	RTS
&FLPC_05  FOUND CREATURE




&SPECIAL_COLLISION	'FOR COLLISION ATTRIBUTES 2-7
	CMP #03
	BCS 03
	JMP &FOUND_CONDITIONAL_DOOR	'=2
	BNE 03
	JMP &FND_01	'&BLOCKED_WITH_MESSAGE     	'=3
	CMP #05
	BCS 03
	JMP &FND_01	'&BLOCKED_WITH_PAIN		'=4
	BEQ &FOUND_NORMAL_ENTRANCE 	'=5 - ENTER BUILDING
	CMP #06
	BEQ &FOUND_NORMAL_EXIT     	'=6 - EXIT BUILDING
'	JMP &FOUND_FLOOR_SWITCH	'=7
&FND_01	RTS
&FOUND_NORMAL_ENTRANCE
	LDA 021A
	BNE &FND_01
	JSR &FETCH_MOD_LOCATION
	LDY #80
	LDA (00),Y
	LDX #03
&FND_10	CMP AB48,X	':HOUSE_ENTRANCE,X
	BEQ &FND_11
	DEX
	BPL &FND_10
	JMP &FND_09 'IF WE CAN'T FIND IT, TRY CONDITIONAL EXITS
&FND_11	LDA AB4C,X
	STA (00),Y
	INY
	LDA AB50,X
	BMI 02
	STA (00),Y
	LDY #00
	LDA AB54,X
	BMI 02
	STA (00),Y
	INY
	LDA AB58,X
	BMI 02
	STA (00),Y
	JSR &SETUP_INSIDE_CREATURES
'	LDA #	'DOOR OPENING SFX
'	STA SFX_BYTE
          INC 020A	'REPOSITION HERO SO STANDING INSIDE BUILDING
          BNE 03
          INC 020B
          LDA 020C
          SBC #05
          STA 020C
          BCS 03
          DEC 020D
	JMP &FCD_07
&FOUND_NORMAL_EXIT
	JSR &FETCH_MOD_LOCATION
	LDY #80
	LDA (00),Y
	LDX #05
&FND_13	CMP AB4C,X
	BEQ &FND_12
	DEX
	BPL &FND_13
	JMP &FND_01
&FND_12	LDA AB48,X
	STA (00),Y
	INY
	LDA AB5C,X
	BMI 02
	STA (00),Y
	LDY #00
	LDA AB60,X
	BMI 02
	STA (00),Y
	INY
	LDA AB64,X
	BMI 02
	STA (00),Y
'	LDA #	'DOOR OPENING SFX
'	STA SFX_BYTE
          LDA 020A
          BNE 03
          DEC 020B
          DEC 020A
          LDA 020C
          ADC #04
          STA 020C
          BCC 03
          INC 020D
	JMP &FCD_07
&FOUND_CONDITIONAL_DOOR
&FND_09   JSR &XLXHYLYH_2_XYMAP
	PHA
	TYA
	JSR &PLOT_HEX
	PLA
	STY 01
	LDX #1F
&FCD_03	CMP AB78,X	':VORTEX_FROM_X,X
	BNE &FCD_01
	LDY AB98,X	':VORTEX_FROM_Y,X
	CPY 01
	BEQ &FCD_02
&FCD_01	DEX
	BNE &FCD_03
	RTS
&FCD_02	JMP &TEST_01
	TXA
	AND #0F
	TAY
	LDA 0600,Y	':VORTEX_CONDITIONAL_OBJECT_NUMBER,X
	BMI 05
	JSR &CHECK_INVENTORY
	BCC &FCD_04
&TEST_01	TXA
	EOR #10
	TAX
	LDA AB78,X	':VORTEX_DESTINATION_X,X
	AND #07
	ASL
	ASL
	ASL
	ASL
	ASL
	STA 020A
	LDA AB78,X
	AND #%01111000
	LSR
	LSR
	LSR
	STA 020B
	LDA AB98,X	':VORTEX_DESTINATION_Y,X
	AND #07
	ASL
	ASL
	ASL
	ASL
	ASL
	STA 020C
	LDA AB98,X	':VORTEX_DESTINATION_Y,X
	AND #%01111000
	LSR
	LSR
	LSR
	STA 020D
	JSR &FML_01
	LDY #80
	LDA (00),Y
	LDX #06
&FCD_06	CMP ABB8,X	':REPOS_ZONE_NUMBER,X
	BEQ &FCD_05
	DEX
	BPL &FCD_06
	INX
&FCD_05	LDA 020A
	AND #%11100000
	ORA ABBF,X	':REPOS_NEW_X,X
	STA 020A
	LDA 020C
	AND #%11100000
	ORA ABC6,X	':REPOS_NEW_Y,X
	STA 020C
&FCD_07	JSR &RESERVE_AD
	JSR &CLR_RSN
&FCD_04	JMP &REFRESH_BGB

&CLR_RSN	LDA #F8	'GAME ARENA START (TL)
	STA 00
	LDA #BB
	STA 01
	LDX #$15
&CRS_02	LDY #$39
	LDA #08
&CRS_01	STA (00),Y
	DEY
	BPL &CRS_01
	LDA #$43
	JSR &ADD_02
	LDA #$40
	JSR &ADD_00
	DEX
	BNE &CRS_02
	RTS

&XLXHYLYH_2_XYMAP
	LDA 020D
	ASL
	ASL
	ASL
	STA 00
	LDA 020C
	JSR &DIV_32
	TAY
	LDA 020B
	ASL
	ASL
	ASL
	STA 00
	LDA 020A
&DIV_32	LSR
	LSR
	LSR
	LSR
	LSR
	ORA 00
	RTS

&FETCH_MOD_LOCATION 'WORK OUT ZONE LOCATION THEN CALC ZONE ABOVE
	LDA 020C	'NEED TO LOOK AT ONE CHARACTER UP, INCASE BUILDING REACHES LIMITS
	SEC
	SBC #01
	PHA
	LDA 020D
	SBC #00
&FML_02	STA 01
	JSR &XLXHYLYH_2_XYMAP
	STA 00
	PLA	'NOW CALCULATE Y ZONE
	AND #%11100000
	ASL   	'NOW MULTIPLY BINARY BY 4 TO EFFECTIVELY GET *128
	ROL 01
	ASL
	ROL 01
	ADC 00	'ADD THE X LOCATION
	BCC 03
	INC 01
	CLC
	ADC #90	'THEN ADD THE MAP BASE-128
	STA 00
	LDA 01
	ADC #39
	STA 01
	RTS
&FML_01	LDA 020C
	PHA
	LDA 020D
	JMP &FML_02

&GLOBAL_CREATURES_LEFT
	LDX #01
&GCL_02	LDA 2A,X
	BMI &GCL_01
	DEC 20,X
	BPL &GCL_01
	ORA #80
	STA 2A,X
&GCL_01	DEX
	BPL &GCL_02
	RTS
&GLOBAL_CREATURES_RIGHT
	LDX #01
&GCR_02	LDA 2A,X
	BMI &GCR_01
	INC 20,X
	LDY 20,X
	CPY #$41
	BCC &GCR_01
	ORA #80
	STA 2A,X
&GCR_01	DEX
	BPL &GCR_02
	RTS
&GLOBAL_CREATURES_UP
	LDX #01
&GCU_02	LDA 2A,X
	BMI &GCU_01
	DEC 22,X
	BPL &GCU_01
	ORA #80
	STA 2A,X
&GCU_01	DEX
	BPL &GCU_02
	RTS
&GLOBAL_CREATURES_DOWN
	LDX #01
&GCD_02	LDA 2A,X
	BMI &GCD_01
	INC 22,X
	LDY 22,X
	CPY #$17
	BCC 02
	ORA #80
	STA 2A,X
&GCD_01	DEX
	BPL &GCD_02
	RTS


'THE FUNDAMENTAL PROBLEM WAS THAT UNLESS ALL CREATURES WERE PLOTTED, IT WOULD BE NEAR
'IMPOSSIBLE TO AVOID OVERLAPPING OF CREATURES WHEN MOVING/CHECKING THEM.
'WITH THIS, ALL CREATURES ARE PLOTTED BEFORE CHECKING AVAILABLE MOVEMENT.


&MOVE_CREATURES
	DEC 021C	'Delay Creature
	BNE &MCR_01
	LDA 021D
	STA 021C
	LDX #01
&MCR_14	LDA 2A,X	'CHECK IF IT IS MOVING
	BMI &MCR_02
	AND #0F
	CMP #08
	BCS &MCR_02
	LDA 2E,X	'NOW CHECK ALLEGIANCES
	BMI &MCR_03	'FOE
	LDA 2C,X	'FRIEND, SO GET CURRENT (FACING) DIRECTION
	BEQ &MCR_04	'FACING_NORTH
	CMP #04
	BEQ &MCR_05	'FACING SOUTH
	BCC &MCR_06	'FACING_WEST
	JSR &MCR_07	'FACING EAST, SO CHECK_EAST
	BCS &MCR_08	'TURN
	INC 20,X
	JMP &MCR_02
&MCR_04	JSR &MCR_09	'CHECK_NORTH	'FACING_NORTH
	BCS &MCR_08	'TURN
	DEC 22,X
	JMP &MCR_02	'NEXT
&MCR_05	JSR &MCR_10	'CHECK_SOUTH	'FACING_SOUTH
	BCS &MCR_08	'TURN
	INC 22,X
	JMP &MCR_02	'NEXT
&MCR_06	JSR &MCR_11	'CHECK_WEST	'FACING_WEST
	BCS &MCR_08	'TURN
	DEC 20,X
	JMP &MCR_02	'NEXT
&MCR_08	LDA 2A,X	'TURN... CHECK IF GUARD
	AND #10
	BNE &MCR_12	'GUARD
	LDA 2C,X
	SBC #02
	BPL &MCR_13
	LDA #06
&MCR_13	STA 2C,X
	JMP &MCR_02	'NEXT
&MCR_12	LDA 2C,X		'GUARD
	EOR #04
	STA 2C,X
&MCR_02	DEX
	BPL &MCR_14
&MCR_01	RTS

&MCR_03	'FOE CONTROL
	LDA 24,X	'CRACK
	BMI &FOE_ATTACK
	DEC 24,X
	JMP EXPLORE_CODE
&FOE_ATTACK
	LDA 20,X
	LDY 22,X
	CMP #$20
	BCC &FOE_RIGHT
	BCS &FOE_LEFT
	CPY #$08
	BCC &FOE_DOWN
&FOE_UP	DEY
	JSR &FOE_CHECK_HORIZONTAL
	BCS &FOE_COLLISION
	DEC 22,X
	JMP &MCR_02
&FOE_LEFT SBC #01
	JSR &FOE_CHECK_VERTICAL
	BCS &FOE_COLLISION
	DEC 20,X
	JMP &MCR_02
&FOE_DOWN	INY
	INY
	INY
	JSR &FOE_CHECK_HORIZONTAL
	BCS &FOE_COLLISION
	INC 22,X
	JMP &MCR_02
&FOE_RIGHT
	ADC #03
	JSR &FOE_CHECK_VERTICAL
	BCS &FOE_COLLISION
	INC 20,X
	JMP &MCR_02
'THE FOE_CHECK_COLLISION ROUTINE WILL RETURN A VALUE IN ACC ACCORDING TO WHAT WAS HIT.
'ACC : 0=BG-OBJECT(NORMAL)  1=BG OBJECT(PAIN)   80=CREATURE SPRITE      81=HERO SPRITE
&FOE_COLLISION
	BMI &FOE_CONTACT
	BNE &FOE_PAIN
	LDA #09
	STA 24,X
	JMP &MCR_02
&FOE_PAIN	DEC 26,X
	BEQ &FOE_DIE
	LDA #02	'SHOW PAIN FOR 3 GAME-CYCLES
	STA 34,X
	LDA #09   'EXPLORE FOR 10
	STA 24,X
	JMP &MCR_02
&FOE_CONTACT
	AND #7F
	BEQ &FOE_PAIN
&FOE_HIT_HERO
	LDA 021E
	BNE &FOE_PAIN
&HERO_PAINED
	DEC 021F
	BEQ &HERO_DIE
	LDA #02
	STA 0220
	JMP &MCR_02
&FOE_DIE	LDA 2A,X
	AND #F0
	ORA #$14
	STA 2A,X
	LDA #00
	STA 28,X
	JMP &MCR_02
&HERO_DIE

&FOE_CHECK_HORIZONTAL
	JSR &CALC_PSB
	LDY #03
&FC_01	LDA (00),Y
	AND #7F
	TAX
	LDA AC0A,X
	BMI &FC_02
	DEY
	BPL &FC_01
&FC_02	LDX 36
	ASL
	RTS

&FOE_CHECK_VERTICAL
	JSR &CALC_PSB
	LDX #03
&FCV_01	LDY AAED,X
	LDA (00),Y
	AND #7F
	TAY
	LDA AC0A,Y
	BMI &FCV_02
	DEY
	BPL &FCV_01
&FCV_02	LDX 36
	ASL
	RTS



&CALC_PSB	CLC
	ADC ABCD,Y
	STA 00
	LDA ABE0,Y
	ADC #00
	STA 01
	RTS



&MCR_11	LDA 20,X		'CHECK_WEST
	LDY 22,X
	SEC
	SBC #01
	BMI &MCR_15	'DISABLE
	JMP &MCR_16	'CHECK_COLUMN	'CS- OBSTACLE
&MCR_07	LDA 20,X		'CHECK_EAST
	LDY 22,X
	CLC
	ADC #03
	CPY #$43
	BCS &MCR_15	'DISABLE
&MCR_16	ADC ABCD,Y  'CHECK_COLUMN    MAY NEED TO CHECK RSN INSTEAD OF PSB!
	STA 00
	LDA ABE0,Y
	ADC #00
	STA 01
	STX 02
	LDX #02
	SEC
&MCR_17	LDY AAED,X
	LDA (00),Y
	TAY
	LDA A93A,Y
	AND #%00111000
	BNE &MCR_18
	DEX
	BPL &MCR_17
	CLC
&MCR_18	LDX 02
	RTS
&MCR_15	LDA #80
	STA 2A,X
	RTS
&MCR_09	LDA 20,X		'CHECK_NORTH
	LDY 22,X
	DEY
	BMI &MCR_15	'DISABLE
	JMP &MCR_21	'CHECK_ROW
&MCR_10	LDA 20,X		'CHECK_SOUTH
	LDY 22,X
	INY
	INY
	INY
	CPY #$19
	BCS &MCR_15	'DISABLE
&MCR_21	ADC ABCD,Y	'CHECK_ROW
	STA 00
	LDA ABE0,Y
	ADC #00
	STA 01
	STX 02
	LDY #02
	SEC
&MCR_20	LDA (00),Y
	TAX
	LDA A93A,X
	AND #%00111000
	BNE &MCR_19
	DEY
	BPL &MCR_20
	CLC
&MCR_19	LDX 02
	RTS


&CHECK_CREATURES
	LDX #01
&CC_LOOP	LDA 2A,X
	BMI &CC_CHECK4NEW
	LDY 20,X
	CPY #$42
	BCS &CC_DEACTIVATE
	LDY 22,X
	CPY #$18
	BCS &CC_DEACTIVATE
	ASL
	ASL
	LDA 021B
	BCS &CC_OUTSIDE
	BEQ &CC_DEACTIAVTE
	JSR &CC_INSIDE
&CC_NEXT	DEX
	BPL &CC_LOOP
	RTS

&CC_DEACTIVATE
	LDA 2A,X
	ORA #80
	STA 2A,X
	JMP &CC_NEXT

&CC_OUTSIDE

&CC_INSIDE

&CC_CHECK4NEW
	LDA 021B
	BEQ &C4N_OUTSIDE 'ALSO RANDOMISE WHETHER OR NOT
&C4N_INSIDE
	STX 03
	LDX #03
&C4N_02	LDA 020A	'INSTEAD OF WORKING OUT <>LO/HI
	SEC       'DO CALCULATION FIRST, THEN CMP MAX
	SBC #$20
	STA 00
	LDA 020B
	SBC #00
	STA 01
	LDA 40,X	':IC_XL,X
	SBC 00
	TAY
	LDA 44,X	':IC_XH,X
	SBC 01
	BNE &C4N_03
	CPY #$41
	BCS &C4N_03
	STY 04

	LDA 020C
	SEC
	SBC #$08
	STA 00
	LDA 020D
	SBC #00
	STA 01
	LDA 48,X	':IC_YL,X CREATURES ARE CALC/STORED HERE WHEN HERO ENTERS BUILDING
	SBC 00
	TAY
	LDA 4C,X	':IC_YH,X
	SBC 01
	BNE &C4N_03
	CPY #$17
	BCS &C4N_03
	LDA 50,X	'IC CREATURE INDEX
	STA 05
	STX 06
	BCC &C4N_01
&C4N_03	DEX
	BPL &C4N_02
	RTS

&C4N_01	LDX 03	'CHECK THAT OTHER CREATURE ISN'T THE ONE WE HAVE NOW
	TXA
	EOR #01
	TAX
	LDA 2E,X
	LDX 06
	AND #7F
	CMP 05
	BEQ &C4N_03
	LDX 03	'NOW SETUP CREATURE
	STY 22,X
	LDY 04
	STY 20,X
	JMP &




&CHECK_CREATURES
	LDX #01	'CHECK If OUTSIDE RANGE
&CHC_05	LDY 2A,X
	BPL &CHC_13
	JMP &CHC_07	'CHECK NEW INTRODUCE CREATURES
&CHC_13	LDA 20,X
	CMP #$42
	BCS &CHC_02	'THIS WILL CHECK BOTH <>
	LDA 22,X
	CMP #$18
	BCS &CHC_02	'
	JSR &CHC_11
	BCC &CHC_04
&CHC_02	TYA
	ORA #80
	STA 2A,X
&CHC_04	DEX
	BPL &CHC_05
	RTS

'PROCESS REST OF CHECKS
&CHC_14	SEC
	RTS
&CHC_11	CPY #40	'CHECK IF INSIDE OR OUTSIDE BUILDING
	LDA 021B	'CC=CREATURE INSIDE     CS=CREATURE OUTSIDE
	ADC #00   '00=HERO OUTSIDE        01=HERO INSIDE
	AND #01   '00=CI/HO  01=CO/HO & CI/HI 02=CO/HI
	BNE &CHC_14	'DISABLE CREATURE
	TYA	'WORK OUT REAL FRAMES 30,X AND 32,X
	AND #0F
	CMP #08
	BCS &PROCESS_STILL_CREATURES
	ASL
	ASL
	ASL
	ASL       '*16 TO MAKE 00/16/32 ETC
	ADC #$32	'ADD TO MAKE 32/48/64 ETC
	ADC 2C,X	'ADD DIRECTION (0/2/4/6)
	ADC 28,X  'ADD FRAME (0/1)
	STA 30,X  'STORE FINISHED BMP FRAME
	ADC #08	'ADD 8 FOR MASK FRAME
	STA 32,X  'AND STORE MSK FRAME
	LDA 28,X	'CONTROL FRAMES
	EOR #01
	STA 28,X
	RTS
&PROCESS_STILL_CREATURES
	TAY
	CMP #$09
	BCC &SUPPING_SERF
	BEQ &DRINKING_SERF
	CMP #$11
	BCC &INNKEEPER
	CMP #$14
	BEQ &CREATURE_DYING
	LDA ABFF,Y	':CREATURE_FRAME-8,Y
	STA 30,X
	ADC #00
	STA 32,X
&CHC_06	RTS

&DRINKING_SERF
	LDY 28,X
	BNE &CDS_02
	LDA 0221
	ADC 0222
	BCS &CSS_01
&CDS_02   JSR &INC_FRAME_4
	LDA ABFB,Y	':DRINKING_SERF_FRAMES,Y
	JMP &CSS_03
&SUPPING_SERF
	LDY 28,X
	BNE &CSS_02
	LDA 0221
	ADC 0222
	BCS &CSS_01
&CSS_02   JSR &INC_FRAME_4
	LDA ABF7,Y	':SUPPING_SERF_FRAMES,Y
&CSS_03	STA 30,X
	ADC #03
	JMP &CSS_04
&CREATURE_DYING
	LDA 28,X
	ADC #00
	CMP #$174
	BCS &CSS_05
	STA 28,X
	STA 30,X
	ADC #04
&CSS_04	STA 32,X
&CSS_01	CLC
&CSS_05	RTS
&INNKEEPER
	LDY 28,X
	LDA ABFF,Y	':INNKEEPER_FRAMES,Y
	STA 30,X
	ADC #$05
	STA 32,X
	CPY #01
	BNE &CIK_02
	LDA 0221	'RANDOMIZE
	ADC 0222
	BCS &IF4_01
&CIK_02	INY
	CPY #$08
	JMP &IF4_02

&INC_FRAME_4
	INY
	CPY #$03
&IF4_02	BCC 03
&IF4_01	LDY #00
	CLC
	STY 28,X
	RTS



&CHC_07   TXA
	EOR #01
	TAY
	LDA 002A,Y
	STA 3D
	LDA 020D	'CHECK IF NEED TO INTRODUCE A NEW CREATURE
	ASL
	ASL
	ASL
	ASL
	ORA 020B
	TAY
	LDA 0500,Y	'FETCH ENVIRONMENT MATRIX ENTRY
	AND #%00100000	'PRIORITY FLAG
	BEQ 03
	JMP &CHC_08	'HIGH PRIORITY AREA
	LDA 0500,Y
&CHC_10	STA 3C
	ASL	'FETCH LOW PRIORITY CREATURE
	ASL
	ASL
	TAY
	LDA 0401,Y
	AND #80
	ORA 3C
	STA 2E,X
	LDA 0217
	EOR #02
	PHA
	ASL
	STA 2C,X
	LDA 0400,Y
	AND #7F
	STA 26,X
	LDA #00
	STA 24,X  'CRACK COUNT
	STA 28,X	'FRAME
	STA 34,X  'PAIN COUNT
	LDA 0407,Y
	AND #7F
	STA 2A,X
	PLA
	TAY
	AND #02
	BEQ &VARY_X
	LDA 0221	'VARY Y
	AND #1F
	CMP #$17
	BCC 02
	SBC #$17
	STA 22,X
	LDA AC8A,Y
	STA 20,X
	JMP &CHC_04
&VARY_X	LDA 0221	'VARY X
	AND #$63
	CMP #$41
	BCC 02
	SBC #$41
	STA 20,X
	LDA AC8D,Y
	STA 22,X
	JMP &CHC_04

&CHC_09	LDA 2E,X
	JMP &CHC_10

&CHC_08	LDA 0500,Y	'CALCULATE OFFSET IN CREATURE DEFS
	AND #$31
	ASL
	ASL
	ASL
	TAY
	STY 3E
	LDA 0407,Y
	AND #0F
	CMP 3D
	BEQ &CHC_09	'HIGH PRIORITY CREATURE ALREADY ON-SCREEN, SO DO LOW PRIORITY ONE
	LDA 0406,Y	'FETCH LOCATION REFERENCE
	AND #0F
	TAY
	JSR &CALC_PSB_LIMITS
	LDA 0620,Y
	LDX 0630,Y
	CPX 01
	BCC &CNC_06
	BEQ 02
	BCS 04
	CMP 00
	BCC &CNC_06
	CPX 05
	BEQ 02
	BCS &CNC_06
	BNE 04
	CMP 04
	BCS &CNC_06
	LDA 0640,Y
	LDX 0650,Y
	CPX 03
	BCC &CNC_06
	BEQ 02
	BCS 04
	CMP 02
	BCC &CNC_06
	CPX 07
	BCC 08
	BEQ 02
	BCS &CNC_06
	CMP 06
	BCS &CNC_06
	LDX 36
	SEC
	SBC 00
	STA 22,X	'YPOS
	LDA 0620,Y
	SEC
	SBC 04
	STA 20,X	'XPOS
	LDA #00
	STA 24,X
	STA 28,X
	STA 34,X
	LDY 3E
	LDA 0400,Y
	AND #7F
	STA 26,X
	LDA 0407,Y
	AND #7F
	STA 2A,X
	LDA 0217
	EOR #02
	ASL
	STA 2C,X
	TYA
	LSR
	LSR
	LSR
	STA 2E,X
	LDA 0401,Y
	AND #80
	ORA 2E,X
	STA 2E,X
&CNC_06	RTS

&CALC_PSB_LIMITS
	LDA 020A
	SEC
	SBC #$18
	STA 00
	LDA 020B
	SBC #00
	STA 01
	LDA 020C
	SBC #06
	STA 02
	LDA 020D
	SBC #00
	STA 03
	LDA 020A
	CLC
	ADC #$20
	STA 04
	LDA 020B
	ADC #00
	STA 05
	LDA 020C
	ADC #08
	STA 06
	LDA 020D
	ADC #00
	STA 07
	RTS







&PLOT_CREATURES
	LDX #01
&PCR_06	LDA 2A,X
	BMI &PCR_07
	STX 36
	LDY 22,X
	LDA ABCD,Y	':YLOCL_PSB,Y
	ADC 20,X
	PHA
	LDA ABE0,Y	':YLOCH_PSB,Y
	ADC #00
	TAX
	PLA
	STA 37
	STX 38
	JSR &POPULATE_BGC_BUFFER
	LDX 36
	LDA ABF3,X	'CREATURE CHAR ADDRESS LO
	STA 3E
	LDA 34,X
	STA 39
	LDA 30,X
	PHA
	LDA 32,X
	JSR &CALC_SPRITE_ADDRESS	'MSK
	STA 3A
	STX 3B
	PLA
	LDX 39
	BNE &PCR_10
	JSR &CALC_SPRITE_ADDRESS	'BMP
	STA 3C
	STX 3D
	LDY #$71	'SHOW NORMAL CREATURE
&PCR_01	LDA AB00,Y	'BGC
	AND (3A),Y	'MSK 3A
	ORA (3C),Y	'BMP 3C
&PCR_04	STA (3E),Y	'CHS 3E
	DEY
	BPL &PCR_01
	LDX 36
&PCR_12	LDA ABF5,X	'CREATURE CHAR NUMBER (FIRST)
	CLC
	LDX #08
&PCR_05	LDY AAE1,X
	STA (37),Y
	ADC #01
	DEX
	BPL &PCR_05
	LDX 36
&PCR_07	DEX
	BPL &PCR_06
	RTS
&PCR_10	LDY #$71	'SHOW PAINED CREATURE
&PCR_11	LDA (3A),Y
	EOR #FF
	ORA AB00,Y
	STA (3E),Y
	DEY
	BPL &PCR_11
	LDX 36
	DEC 34,X
	JMP &PCR_12

&MOVE_IF_APPLICABLE
	LDX #03
&MIA_01	LDA 020A,X
	CMP 0213,X
	BNE &MIA_02
	DEX
	BPL &MIA_01
	RTS
&MIA_02	CPX #02
	BCS &MIA_03	'Y CHANGE DETECTED
	LDA 0214
	CMP 020B
	BEQ &MIA_06
	BCC &MIA_04	'RIGHT MOVE
&MIA_05	JMP &SCROLL_BGB_RIGHT	'LEFT MOVE
&MIA_06	LDA 0213
	CMP 020A
	BCS &MIA_05	'RIGHT MOVE
&MIA_04	JMP &SCROLL_BGB_LEFT
&MIA_03	LDA 0216
	CMP 020D
	BEQ &MIA_07
	BCC &MIA_08	'DOWN MOVE
&MIA_09	JMP &SCROLL_BGB_DOWN	'UP MOVE
&MIA_07	LDA 0215
	CMP 020C
	BCS &MIA_09	'DOWN MOVE
&MIA_08	JMP &SCROLL_BGB_UP




	JSR &SCROLL_BGB_DOWN
	JMP &REFRESH_REST


&REFRESH_VIEW
	JSR &REFRESH_BGB
&REFRESH_REST
	JSR &BGB_2_PSB
	'PLOT ENTITIES
	JSR &PSB_COLOURS
	JSR &PSB_2_RSN
	RTS

&SWAP_PAGES_02
	LDX #00
&SWP_02	LDY B000,X
	LDA 00,X
	STA B000,X
	STY 00,X
	LDA 0200,X
	LDY B100,X
	STA B100,X
	TYA
	STA 0200,X
	DEX
	BNE &SWP_02
	RTS


&REFRESH_BGB
	JSR &SETUP_BGB
	JSR &CALC_HERO_SCREEN_TL	'PLACES INTO 10-13
	LDX #0F
&RBG_04	LDY #00
&RBG_02	JSR &LOCATE_CHAR
	STA (00),Y
	INC 10
	BNE &RBG_01
	INC 11
&RBG_01	INY
	CPY #27
	BCC &RBG_02
	LDA 10
	SBC #27
	STA 10
	LDA 11
	SBC #00
	STA 11
	INC 12
	BNE &RBG_03
	INC 13
&RBG_03	LDA #27
	JSR &ADD_00
	DEX
	BNE &RBG_04
	RTS

&BGB_2_PSB
	JSR &SETUP_BGB
	LDA #61
	STA 02
	LDA #A6
	STA 03
	LDX #0F
&B2P_02	LDY #26
&B2P_01	LDA (00),Y
	STA (02),Y
	DEY
	BPL &B2P_01
	LDA #27
	JSR &ADD_00
	LDA #$43
	JSR &ADD_02
	DEX
	BNE &B2P_02
	RTS

&PSB_COLOURS
	JSR &CALC_HERO_SCREEN_TL
	LDA #60
	STA 02
	LDA #A6
	STA 03
	LDY #$00
	LDX #$15
&PCLCL_01	JSR &LOCATE_COLOUR
	STA (02),Y
	JSR INC_12
	LDA #$43
	JSR &ADD_02
	DEX
	BNE &PCLCL_01
	RTS

&PSB_2_RSN
	JSR &SETUP_PSB
	LDA #F8	'GAME ARENA START (TL)
	STA 00
	LDA #BB
	STA 01
	LDX #$15
&P2R_02	LDY #$39
&P2R_01	LDA (02),Y
	STA (00),Y
	DEY
	BPL &P2R_01
	LDA #$43
	JSR &ADD_02
	LDA #$40
	JSR &ADD_00
	DEX
	BNE &P2R_02
	RTS

&LOCATE_BYTE
	STY 14
	LDA 10
	AND #%00011100
	LSR             '/4
	LSR
	STA 1A	'XPOS_IN_ZONE
	LDA 10
	AND #03
	STA 1B	'XPOS_IN_BLOCK
	LDA 12
	AND #03         '*4
	ASL
	ASL
	ORA 1B
	STA 16	'OFFSET IN BLOCK
	LDA 12
	AND #%00011100
	ASL
	ORA 1A	'XPOS_IN_ZONE
	STA 15    'OFFSET IN ZONE
	LDA 10
	STA 17
	LDA 11
	ASL 17          '*8 (16 BIT)
	ROL
	ASL 17
	ROL
	ASL 17
	ROL
	STA 1D	'XPOS_IN_MAP
	LDA 13
	STA 17
	LDA 12
	AND #%11100000
	ASL
	ROL 17
	ASL
	ROL 17
	ORA 1D	'XPOS_IN_MAP
	ADC #10   'MAP BASE LO
	STA 18
	LDA 17
	ADC #3A   'MAP BASE HI
	STA 19
	LDY #00
	LDA (18),Y 'ZONE
	STY 19
	JSR &ROLLS_64        '*64 (16 BIT)
	LDY 19
	ADC 15	'OFFSET IN ZONE
	BCC 01
	INY
	CLC
	ADC #10   'ZONE BASE LO
	STA 17
	TYA
	ADC #6A	'ZONE BASE HI
	STA 18
	LDY #00
	LDA (17),Y 'BLOCK
	STY 19
	JSR &ROLLS_16          '*16 (16 BIT)
	LDY 19
	ADC 16              'OFFSET IN BLOCK
	BCC 01
	INY
	CLC
	ADC #10             'BLOCK BASE LO
	STA 15
	TYA
	ADC #8A             'BLOCK BASE HI
	STA 16
	LDY #00
	LDA (15),Y
	LDY 14
	RTS

&ROLLS_64	ASL
	ROL 19
	ASL
	ROL 19
&ROLLS_16	ASL
	ROL 19
&ROLLS_08	ASL
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	RTS

&LOCATE_CHAR
	STY 1F
	JSR &LOCATE_BYTE
	CMP #20
	BCC &LCH_01
	STA &LCH_05+1
	TAY
	LDA A93A,Y
	ASL
	ROL
	ROL
	AND #03
	PHA
	TYA
	SEC
	SBC #20
	AND #3F
	TAY
	PLA
	CMP AA3A,Y
	BEQ &LCH_02
	STA AA3A,Y
	ASL
	ADC #9A
	PHA
	TYA
	ASL
	ASL
	ASL
	STA &LCH_03+1	'SOURCE BASE LO
	STA &LCH_06+1	'CHARACTER BASE LO
	PLA
	ADC #00
	STA &LCH_03+2	'SOURCE BASE HI
	AND #01
	ADC #B5
	STA &LCH_06+2  	'CHARACTER BASE HI
	LDY #07
&LCH_03	LDA BF00,Y
&LCH_06	STA BF00,Y
	DEY
	BPL &LCH_03
&LCH_02	LDY 1F
&LCH_05	LDA #07
	CMP #$224
	BCS &LCH_04
	SBC #$31
	AND #3F
	ADC #$31
&LCH_01	RTS
&LCH_04	SBC #$64
	RTS

&LOCATE_COLOUR
	JSR &LOCATE_BYTE
	TAY
	ADC 0221
	STA 0221
	LDA A93A,Y
	AND #07
	LDY 14
	RTS

&SCROLL_BGB_LEFT	'AND FILL RIGHT-COLUMN
	JSR &SETUP_BGB
	LDX #$15
&SBGBL_02	LDY #01
&SBGBL_01	LDA (00),Y
	DEY
	STA (00),Y
	INY
	INY
	CPY #$40
	BCC &SBGBL_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBL_02
	JSR &APLUS_20
	JSR &CLESS_6
	LDA #E6
	STA 00
	LDA #A3
	STA 01
	LDX #$15
	LDY #00
&SBGBL_03	JSR &LOCATE_CHAR
	STA (00),Y
	JSR &INC_12
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBL_03
	RTS

&SCROLL_BGB_RIGHT	'AND FILL LEFT-COLUMN
	JSR &SETUP_BGB
	LDX #$15
&SBGBR_02	LDY #$37
&SBGBR_01	LDA (00),Y
	INY
	STA (00),Y
	DEY
	DEY
	BPL &SBGBR_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBR_02
	JSR &ALESS_18
	JSR &CLESS_6
	JSR &SETUP_BGB
	LDX #$15
	LDY #00
&SBGBR_03	JSR &LOCATE_CHAR
	STA (00),Y
	JSR &INC_12
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBR_03
	RTS

&SCROLL_BGB_DOWN	'AND FILL TOP-ROW
	LDA #BB
	STA 00
	LDA #A5
	STA 01
	LDX #$15
&SBGBD_02	LDA #$38
	STA 02
	LDA #$77
	STA 03
&SBGBD_01	LDY 02
	LDA (00),Y
	LDY 03
	STA (00),Y
	DEC 03
	DEC 02
	BPL &SBGBD_01
	LDA #$39
	JSR &SUB_00
	DEX
	BNE &SBGBD_02
	JSR &ALESS_18
	JSR &CLESS_6
	LDX #00
&SBGBD_03	JSR &LOCATE_CHAR
	STA A3C0,X
	JSR &INC_10
	INX
	CPX #$39
	BCC &SBGBD_03
	RTS

&SCROLL_BGB_UP	'AND FILL BOTTOM-ROW
	JSR &SETUP_BGB
	LDX #$15
&SBGBU_02	LDA #$38
	STA 02
	LDA #$77
	STA 03
&SBGBU_01	LDY 03
	LDA (00),Y
	LDY 02
	STA (00),Y
	DEC 03
	DEC 02
	BPL &SBGBU_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBU_02
	JSR &ALESS_18
	JSR &CPLUS_8
	LDX #00
&SBGBU_03	JSR &LOCATE_CHAR
	STA A5E2,X
	JSR &INC_10
	INX
	CPX #$39
	BCC &SBGBU_03
	RTS

&CHECK_HERO_LEFT


&SETUP_BGB
	LDA #C0
	STA 00
	LDA #A3
	STA 01
	RTS

&SETUP_PSB
	LDA #60
	STA 02
	LDA #A6
	STA 03
	RTS

&ADD_00	CLC
	ADC 00
	STA 00
	LDA 01
	ADC #00
	STA 01
	RTS



&ADD_02   CLC
	ADC 02
	STA 02
	LDA 03
	ADC #00
	STA 03
	RTS

&SUB_00	STA 02
	LDA 00
	SEC
	SBC 02
	STA 00
	LDA 01
	SBC #00
	STA 01
	RTS

&DEC_00	LDA 00
	BNE 02
	DEC 01
	DEC 00
	RTS


&INC_10	INC 10
	BNE 02
	INC 11
	RTS

&INC_12	INC 12
	BNE 02
	INC 13
	RTS

&ALESS_18	LDA 020A
	SEC
	SBC #$18
	STA 10
	LDA 020B
	SBC #00
	STA 11
	RTS

&APLUS_20	LDA 020A
	CLC
	ADC #$20
	STA 10
	LDA 020B
	ADC #00
	STA 11
	RTS

&CLESS_6	LDA 020C
	SEC
	SBC #$06
	STA 12
	LDA 020D
	SBC #00
	STA 13
	RTS

&CPLUS_8	LDA 020C
	CLC
	ADC #$08
	STA 12
	LDA 020D
	ADC #00
	STA 13
	RTS

&CALC_HERO_SCREEN_TL	'PLACES INTO 02-05
	LDA 020A
	SEC
	SBC #$18
	STA 10
	LDA 020B
	SBC #00
	STA 11
	LDA 020C
	SBC #$06
	STA 12
	LDA 020D
	SBC #00
	STA 13
	RTS

&RAM_KEYBOARD
	LDA #%00010000
	JSR &CHECK_KEY_ROWS
	STA 0210	'LETTERS, NUMBERS ETC
	LDA #00
	STA 0211
	LDA #%11101111
	JSR &CHECK_KEY_ROWS	'SHIFT, CTRL ETC
&RKB_01	LDA 0200	'KEY_GLIDE
	BEQ &RKB_03	'GLIDE ONLY IN GAME
	LDA 0210
&RKB_13	CMP #00	'PREVIOUS KEY
	BEQ &RKB_02
	STA &RKB_13+1
	CMP #00
	BEQ &RKB_05	'KEY UP
&RKB_03	RTS
&RKB_02	CMP #00
	BEQ &RKB_03
	DEC 0212
	BEQ &RKB_04
	LDA #00
	STA 0210
	JMP &RKB_03
&RKB_04	LDA #$01	'REPEAT DELAY
	JMP &RKB_06
&RKB_05	LDA #$08	'KEY DELAY REF
&RKB_06	STA 0212
	JMP &RKB_03
&CHECK_KEY_ROWS	'FIRST CHECKS ALL KEYS(COLUMN=00) ON ALL ROWS (0-7)
	PHA
	LDX #0E	'REGISTER
	JSR &WRITE_AY
	LDX #07
&RKB_07	STX 0300
	LDA #08
	INC 0221
	AND 0300
	BNE &RKB_10
&RKB_08	DEX
	BPL &RKB_07
	PLA
	LDA #00
	RTS	'A=0 NO KEY
&RKB_10	PLA
	BMI &FOUND_RED_KEY
&CHECK_SINGLE_ROW
	STX &RKB_12+1	'TEMP
	LDY #06
&RKB_09	LDA AAA2,Y
	LDX #0E
	JSR &WRITE_AY
	LDA #08
	INC 0222
	AND 0300
	BNE &FOUND_BLACK_KEY
	DEY
	BPL &RKB_09
	RTS	'A=0 NO KEY
&FOUND_BLACK_KEY
	TYA
	ASL
	ASL
	ASL
&RKB_12	ORA #00	'TEMP
	TAY
	LDA AAA9,Y
	RTS
&FOUND_RED_KEY
	PHA
	LDA AA9A,X
	ORA 0211
	STA 0211
	JMP &RKB_08


&WRITE_AY	STX 030F
	LDX #FF
	STX 030C
	LDX #DD
	STX 030C
	STA 030F
	LDA #FD
	STA 030C
	STX 030C
	RTS




~END
