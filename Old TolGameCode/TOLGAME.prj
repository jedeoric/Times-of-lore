


X == ----MMMM MMMSSSBB
Y == -----MMM MMMSSSBB


'20-21 XPOS
'22-23 YPOS
'24-25 SCREEN LOC

&PLOT_CHARACTER
	JSR &MAP2ZONE
	JSR &ZONE2BLOCK
	JSR &BLOCK2CHAR
	JSR &CHAR2PLOT
	LDY #00
	STA (24),Y
	RTS

&MAP2ZONE
	CALC & FETCH ZONE NUMBER
	LDA 22
	AND #%11100000
	STA 26
	LDA 23
	ASL 26
	ROL
	ASL 26
	ROL
	ADC #04
	STA &M2Z_01+2
	LDA 20
	STA 28
	LDA 21
	ASL 28
	ROL
	ASL 28
	ROL
	ASL 28
	ROL
	ORA 26
	STA &M2Z_01+1
&M2Z_01	LDA BF00
	RTS

'--ZZZZZZ >> ----ZZZZ ZZ------

&ZONE2BLOCK
	STA 27	'TAKE ZONE (FROM MAP) AND MULTIPLY BY 64
	LDA #00
	LSR 27
	ROR
	LSR 27
	ROR
	STA 26
'NOW CALCULATE 6 BIT POSITION WITHIN ZONE AND INSERT INTO ZONE
	LDA 22
	ASL
	AND #%00111000
	ORA 26
	STA 26
	LDA 20
	AND #%00011100
	LSR
	LSR
	ORA 26
	STA &Z2B_01+1
	LDA 27
	ADC #48
	STA &Z2B_01+2
&Z2B_01	LDA BF00
	RTS

&BLOCK2CHAR
	STA 27
	LDA #00
	LSR 27
	ROR
	LSR 27
	ROR
	LSR 27
	ROR
	LSR 27
	ROR
	STA 26
	LDA 22
	AND #%00000011
	ASL
	ASL
	ORA 26
	STA 26
	LDA 20
	AND #%00000011
	ORA 26
	STA &B2C_01+1
	LDA 27
	ADC #34
	STA &B2C_01+2
&B2C_01	LDA BF00
	RTS


'00-1F ATTRIBUTES
'20-5F NORMAL VIDEO CHARACTERS 32-95
'60-9F NORMAL VIDEO CHARACTERS 32-95
'A0-DF NORMAL VIDEO CHARACTERS 32-95
'E0-FF INVERSE VIDEO CHARACTERS 32-63
&CHAR2PLOT
	STA &C2P_01	'STORED TO FETCH CHARACTER SET
	CMP #E0
	LDX #00
	BCC 02
	LDX #80		'&INVERSED
	STX 28
	CMP #20
	BCC &C2P_04	'COLOUR
	SBC #20
	AND #%00111111
	STA 26
	ADC #1F
	TAY	'CHARACTER 32-95
&C2P_01	LDA 4800
	STA 27	'RESERVE SET-INK-COL BYTE
	AND #01
	CMP :CURRENT_CHARACTER_SET,Y
	BEQ &C2P_05	'NO NEED TO CHANGE IF ALREADY DEFINED CORRECTLY!
	STA :CURRENT_CHARACTER_SET,Y
	LDA 26
	ASL
	ASL
	ASL
	STA &C2P_03+1
	STA &C2P_02+1
	LDA #B5
	ADC #00
	STA &C2P_03+2
	LDX :CURRENT_CHARACTER_SET,Y
	SEC
	SBC :CHARACTER_SET_OFFSET,X
	STA &C2P_02+2
	LDX #07
&C2P_02	LDA BF00,X
&C2P_03	STA BF00,X
	DEX
	BPL &C2P_02
&C2P_05	TYA
&C2P_04	ORA 28
	RTS

:CHARACTER_SET_OFFSET
[716F]





'0-0 CHARACTER SET (REQUIRED)
'1-3 ASSOCIATED COLOUR
'4-7 COLLISION

	CHECK DEFINITION
	FETCH COLOUR/ATTRIBUTES
