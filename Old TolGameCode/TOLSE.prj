'SCROLL (IN) AND SCAN ACROSS TOL LANDSCAPE (EXAMPLE ONLY)

;DIRECTION          ($00)
;XPOS_L		($200)
;XPOS_H             ($06)
;YPOS_L             ($200)
;YPOS_H             ($03)
;DIR_COUNT_L        ($224)
;DIR_COUNT_H        ($03)
;HIT_FLAG
:CREATURE_SECTOR
[BEB40606C8C803030000FFFF000000000101]
:OBJECT_ACTION_L

:OBJECT_ACTION_H
:FRAME_STYLE_L	'STAGNANT CREATURE FRAME PROCESSING (8)
[L&FST_08,&FST_09,&FST_0A,&FST_0B,&FST_0C,&FST_0D,&FST_0E]
:FRAME_STYLE_H
[H&FST_08,&FST_09,&FST_0A,&FST_0B,&FST_0C,&FST_0D,&FST_0E]
:CREATURE_ACTION_L	'MOVING CREATURE, EXPLORE UP/LEFT/DOWN/RIGHT/CHASE UP ETC(8)
[L&MVC_CT0,&MVC_CT1,&MVC_CT2,&MVC_CT3,&MVC_CTA,&MVC_CTA,&MVC_CTA,&MVC_CTA]
:CREATURE_ACTION_H
[H&MVC_CT0,&MVC_CT1,&MVC_CT2,&MVC_CT3,&MVC_CTA,&MVC_CTA,&MVC_CTA,&MVC_CTA]


&DRIVER	LDA #00
	STA 0213
	STA 0214
	STA 0200
	LDX #$17
&DRV_02	LDA :CREATURE_SECTOR,X
	STA 20,X
	DEX
	BPL &DRV_02
	JSR &REFRESH_VIEW
&DRV_01	JSR &CONTROL_DIRECTION
	JSR &BGB_PSN
'	JSR &PLOT_ENTITIES	'WE PLOT CREATURES&OBJECTS HERE
	JSR &PLOT_HERO      'THEN PLOT HERO
	JSR &PSN_SCN
	JSR &DELAY
	LDA ;XPOS_H
	JSR &PLOT_HEX
	STX BF6B
	STA BF6C
	LDA ;XPOS_L
	JSR &PLOT_HEX
	STX BF6D
	STA BF6E
'WE PROCESS CREATURES HERE TO ENSURE PSN IS POPULATED WITH STUFF, AND HASN'T BEEN
'REFRESHED FOR THE NEXT FRAME
'	JSR &MANAGE_CREATURES
	JMP &DRV_01


&DELAY	LDX #08
	LDY #00
&DEL_01	NOP
	NOP
	NOP
	DEY
	BNE &DEL_01
	DEX
	BNE &DEL_01
	RTS

&SWAP_ZP	LDX #00
&SWZP_01	LDY A000,X
	LDA 00,X
	STY 00,X
	STA A000,X
	DEX
	BNE &SWZP_01
	RTS

&CONTROL_DIRECTION
	JSR &INKEY
	LDA 0200	'CONTROL MODE
	BEQ &CD_GAME
'	BMI &CD_MENUS
&CD_ICON	JSR &PLOT_ICON
	LDX 0212
	TXA
	AND #04	'LEFT
	BEQ 03
	JMP &ICON_LEFT
	TXA
	AND #08	'RIGHT
	BEQ 03
	JMP &ICON_RIGHT
	TXA
	AND #20	'EXIT (SPACE)
	BEQ 03
	JMP &ICON_EXIT
	TXA
	AND #10	'SELECT (FIRE)
	BEQ 03
	JMP &ICON_SELECT
	RTS
&CD_GAME	LDX 0208
	TXA
	AND #01
	BEQ 03
	JMP &ATTEMPT_UP
	TXA
	AND #04
	BEQ 03
	JMP &ATTEMPT_DOWN
	TXA
	AND #02
	BEQ 03
	JMP &ATTEMPT_LEFT
	TXA
	AND #08
	BEQ 03
	JMP &ATTEMPT_RIGHT
	TXA
	AND #10
	BEQ 03
	JMP &ATTEMPT_FIRE
	TXA
	AND #20
	BEQ 05
	LDA #01
	STA 0200
	RTS

&ICON_LEFT
	LDA 0201	';ICON_X
	BEQ 03
	DEC 0201	';ICON_X
	RTS
&ICON_RIGHT
	LDA 0201	';ICON_X
	CMP #07
	BCS 03
	INC 0201	';ICON_X
	RTS
&ICON_EXIT
	LDA #00
	STA 0200

&ICON_SELECT

&PLOT_ICON
	LDX #$39
	LDA #40
&PLI_02	STA A000,X
	STA A2D0,X
	DEX
	BNE &PLI_02
	LDA O201	';ICON_X
	ASL
	ASL
	ADC 0201	';ICON_X
	TAX
	LDY #$04
&PLI_01	LDA AB58,Y	':ICON_PATTERN,Y
	STA A001,X
	STA A2D1,X
	INX
	DEY
	BPL &PLI_01
	RTS

&ATTEMPT_DOWN
	LDA ;XPOS_L
	STA 10
	LDA ;XPOS_H
	STA 11
	LDA ;YPOS_L
	CLC
	ADC #03
	STA 12
	LDA ;YPOS_H
	ADC #00
	STA 13
	LDX #02
&ATD_02	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	LSR
	LSR
	LSR
	AND #07
	BNE &ATD_01
	LDA A7CB,X
	CMP #$110
	BCS &ATD_01
	INC 10
	BNE 02
	INC 11
	DEX
	BPL &ATD_02
	INC ;YPOS_L
	BNE 03
	INC ;YPOS_H
	LDA #02
	STA 0214
	STA 0215
	LDA #02
	STA ;DIRECTION
	JSR &MOVE_ENTITIES_UP
	JSR &SCROLL_BGB_UP
&ATD_01	RTS

&ATTEMPT_UP
	LDA ;XPOS_L
	STA 10
	LDA ;XPOS_H
	STA 11
	LDA ;YPOS_L
	SEC
	SBC #01
	STA 12
	LDA ;YPOS_H
	SBC #00
	STA 13
	LDX #02
&ATU_02	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	LSR
	LSR
	LSR
	AND #07
	BNE &ATU_01
	LDA A74A,X
	CMP #$110
	BCS &ATU_01
	INC 10
	BNE 02
	INC 11
	DEX
	BPL &ATU_02
	LDA ;YPOS_L
	BNE 03
	DEC ;YPOS_H
	DEC ;YPOS_L
	LDA #00
	STA 0214
	STA 0215
	LDA #00
	STA ;DIRECTION
	JSR &MOVE_ENTITIES_DOWN
	JSR &SCROLL_BGB_DOWN
&ATU_01	RTS

&ATTEMPT_LEFT
	LDA ;YPOS_L
	STA 12
	LDA ;YPOS_H
	STA 13
	LDA ;XPOS_L
	SEC
	SBC #01
	STA 10
	LDA ;XPOS_H
	SBC #00
	STA 11
	LDX #02
&ATL_02	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	LSR
	LSR
	LSR
	AND #07
	BNE &ATL_01
	LDY AAFF,X
	LDA A774,Y
	CMP #$110
	BCS &ATL_01
	INC 12
	BNE 02
	INC 13
	DEX
	BPL &ATL_02
	LDA ;XPOS_L
	BNE 03
	DEC ;XPOS_H
	DEC ;XPOS_L
	LDA #01
	STA 0214
	STA 0215
	LDA #01
	STA ;DIRECTION
	JSR &MOVE_ENTITIES_RIGHT
	JSR &SCROLL_BGB_RIGHT
&ATL_01	RTS

&ATTEMPT_RIGHT
	LDA ;YPOS_L
	STA 12
	LDA ;YPOS_H
	STA 13
	LDA ;XPOS_L
	CLC
	ADC #03
	STA 10
	LDA ;XPOS_H
	ADC #00
	STA 11
	LDX #02
&ATR_02	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	LSR
	LSR
	LSR
	AND #07
	BNE &ATR_01
	LDY AAFF,X
	LDA A778,Y
	CMP #$110
	BCS &ATR_01
	INC 12
	BNE 02
	INC 13
	DEX
	BPL &ATR_02
	INC ;XPOS_L
	BNE 03
	INC ;XPOS_H
	LDA #03
	STA 0214
	sta 0215
	LDA #03
	STA ;DIRECTION
	JSR &MOVE_ENTITIES_LEFT
	JSR &SCROLL_BGB_LEFT
&ATR_01	RTS

&ADD_00	CLC
	ADC 00
	STA 00
	LDA 01
	ADC #00
	STA 01
	RTS

&SUB_00	STA 05
	LDA 00
	SEC
	SBC 05
	STA 00
	LDA 01
	SBC #00
	STA 01
	RTS

&ADD_02
	ADC 02
	STA 02
	LDA 03
	ADC #00
	STA 03
	RTS

&REFRESH_VIEW
	LDA ;XPOS_L
	SEC
	SBC #$18
	STA 10
	LDA ;XPOS_H
	SBC #00
	STA 11
	LDA ;YPOS_L
	SBC #$06
	STA 12
	LDA ;YPOS_H
	SBC #00
	STA 13
	LDA #C0
	STA 00
	LDA #A3
	STA 01
	LDX #$15
&RVW_02	LDY #$00
&RVW_01	JSR &GET_CHAR
	STA (00),Y
	INC 10
	BNE 02
	INC 11
	INY
	CPY #$39
	BCC &RVW_01
	LDA 10
	SEC
	SBC #$39
	STA 10
	BCS 02
	DEC 11
	INC 12
	BNE 02
	INC 13
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &RVW_02
	RTS

&SCROLL_BGB_LEFT	'AND FILL RIGHT-COLUMN
	LDA #C0		'SCROLL LEFT
	STA 00
	LDA #A3
	STA 01
	LDX #$15
&SBGBL_02	LDY #01
&SBGBL_01	LDA (00),Y
	DEY
	STA (00),Y
	INY
	INY
	CPY #$40
	BCC &SBGBL_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBL_02
	LDA ;XPOS_L	'HERO_ORIGIN_XL	'FILL RIGHT-COLUMN
	CLC
	ADC #$20
	STA 10
	LDA ;XPOS_H	';HERO_ORIGIN_XH
	ADC #00
	STA 11
	LDA ;YPOS_L	';HERO_ORIGIN_YL
	SEC
	SBC #$06
	STA 12
	LDA ;YPOS_H	';HERO_ORIGIN_YH
	SBC #00
	STA 13
	LDA #E6
	STA 00
	LDA #A3
	STA 01
	LDX #$15
	LDY #00
&SBGBL_03	JSR &GET_CHAR
	STA (00),Y
	INC 12
	BNE 02
	INC 13
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBL_03
	RTS

&SCROLL_BGB_RIGHT	'AND FILL LEFT-COLUMN
	LDA #C0		'SCROLL LEFT
	STA 00
	LDA #A3
	STA 01
	LDX #$15
&SBGBR_02	LDY #$37
&SBGBR_01	LDA (00),Y
	INY
	STA (00),Y
	DEY
	DEY
	BPL &SBGBR_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBR_02
	LDA ;XPOS_L	'HERO_ORIGIN_XL	'FILL RIGHT-COLUMN
	SEC
	SBC #$18
	STA 10
	LDA ;XPOS_H	';HERO_ORIGIN_XH
	SBC #00
	STA 11
	LDA ;YPOS_L	';HERO_ORIGIN_YL
	SEC
	SBC #$06
	STA 12
	LDA ;YPOS_H	';HERO_ORIGIN_YH
	SBC #00
	STA 13
	LDA #C0
	STA 00
	LDA #A3
	STA 01
	LDX #$15
	LDY #00
&SBGBR_03	JSR &GET_CHAR
	STA (00),Y
	INC 12
	BNE 02
	INC 13
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBR_03
	RTS

&SCROLL_BGB_DOWN	'AND FILL TOP-ROW
	LDA #BB
	STA 00
	LDA #A5
	STA 01
	LDX #$15
&SBGBD_02	LDA #$38
	STA 02
	LDA #$77
	STA 03
&SBGBD_01	LDY 02
	LDA (00),Y
	LDY 03
	STA (00),Y
	DEC 03
	DEC 02
	BPL &SBGBD_01
	LDA #$39
	JSR &SUB_00
	DEX
	BNE &SBGBD_02
	LDA ;XPOS_L	'HERO_ORIGIN_XL	'FILL RIGHT-COLUMN
	SEC
	SBC #$18
	STA 10
	LDA ;XPOS_H	';HERO_ORIGIN_XH
	SBC #00
	STA 11
	LDA ;YPOS_L	';HERO_ORIGIN_YL
	SEC
	SBC #$06
	STA 12
	LDA ;YPOS_H	';HERO_ORIGIN_YH
	SBC #00
	STA 13
	LDX #00
&SBGBD_03	JSR &GET_CHAR
	STA A3C0,X
	INC 10
	BNE 02
	INC 11
	INX
	CPX #$39
	BCC &SBGBD_03
	RTS

&SCROLL_BGB_UP	'AND FILL BOTTOM-ROW
	LDA #C0
	STA 00
	LDA #A3
	STA 01
	LDX #$15
&SBGBU_02	LDA #$38
	STA 02
	LDA #$77
	STA 03
&SBGBU_01	LDY 03
	LDA (00),Y
	LDY 02
	STA (00),Y
	DEC 03
	DEC 02
	BPL &SBGBU_01
	LDA #$39
	JSR &ADD_00
	DEX
	BNE &SBGBU_02
	LDA ;XPOS_L	'HERO_ORIGIN_XL	'FILL RIGHT-COLUMN
	SEC
	SBC #$18
	STA 10
	LDA ;XPOS_H	';HERO_ORIGIN_XH
	SBC #00
	STA 11
	LDA ;YPOS_L	';HERO_ORIGIN_YL
	CLC
	ADC #$08
	STA 12
	LDA ;YPOS_H	';HERO_ORIGIN_YH
	ADC #00
	STA 13
	LDX #00
&SBGBU_03	JSR &GET_CHAR
	STA A5E2,X
	INC 10
	BNE 02
	INC 11
	INX
	CPX #$39
	BCC &SBGBU_03
	RTS

&PLOT_COLCOL
	LDA ;XPOS_L
	SEC
	SBC #$18
	STA 10
	LDA ;XPOS_H
	SBC #00
	STA 11
	LDA ;YPOS_L
	SEC
	SBC #$06
	STA 12
	LDA ;YPOS_H
	SBC #00
	STA 13
	LDA #60
	STA 00
	LDA #A6
	STA 01
	LDY #$00
	LDX #$15
&PCLCL_01	JSR &GET_COLOUR
	STA (00),Y
	INC 12
	BNE 02
	INC 13
	LDA #$43
	JSR &ADD_00
	DEX
	BNE &PCLCL_01
	RTS

&BGB_PSN	LDA #C0
	STA 00
	LDA #A3
	STA 01
	LDA #61
	STA 02
	LDA #A6
	STA 03
	CLC
	LDX #$15
&BGBS_02	LDY #$38
&BGBS_01	LDA (00),Y
	STA (02),Y
	DEY
	BPL &BGBS_01
	LDA #$39
	JSR &ADD_00
	LDA #$43
	JSR &ADD_02
	DEX
	BNE &BGBS_02
	RTS

&PSN_SCN	JSR &PLOT_COLCOL
	LDA #60
	STA 00
	LDA #A6
	STA 01
	LDA #F8
	STA 02
	LDA #BB
	STA 03
	CLC
	LDX #$15
&BGBS_02	LDY #$39
&BGBS_01	LDA (00),Y
	STA (02),Y
	DEY
	BPL &BGBS_01
	LDA #$43
	JSR &ADD_00
	LDA #$40
	JSR &ADD_02
	DEX
	BNE &BGBS_02
	RTS

&PLOT_HERO
	LDA ;HIT_FLAG
	BEQ &PLTH_03
	DEC ;HIT_FLAG
	BNE 06
	LDA 0215
	JMP &HFC_03
	LDX 0215
	LDA AB48,X	':HEROFIRE_BMP_L,X
	STA 70
	LDA AB4C,X	':HEROFIRE_BMP_H,X
	STA 71
	LDA AB50,X	':HEROFIRE_MSK_L,X
	STA 72
	LDA AB54,X	':HEROFIRE_MSK_H,X
	STA 73
	JSR &HFC_02
	JMP &PLTH_02
&PLTH_03	LDA 0214
	BMI &PLTH_02
	JSR &HERO_FRAME_CONTROL
	LDA #80
	STA 0214
&PLTH_02	LDA #$104
	SEC
	LDX #$08
&PLTH_01	LDY AAFF,X
	STA A775,Y
	SBC #01
	DEX
	BPL &PLTH_01
	RTS

&PLOT_ENTITIES
	LDX #01             'ANIMATE & PLOT CREATURES
&PENT_05	LDA 2A,X
	BMI &PENT_04        'DON'T PLOT CREATURE IF INACTIVE
	STX 02
	LDA 22,X		'NOW GET PSN LOCATION
	LDY 20,X
	JSR &CALC_PSN_LOCATION
	JSR &DEFS_BUF	'POPULATE AE00 - sprite background buffer
	LDY #70		'AND CALCULATE WHICH CHARACTER GROUP TO STORE SPRITE
	LDX 02
	BEQ 02
	LDY #B8
	STY &PENT_01+1
	LDA 60,X		'NOW CALCULATE THE BITMAP FRAME
	JSR &CALC_FRAME	'INTO A(L) & Y(H)
	STA 64              'BMP
	STY 65
	LDA 62,X		'AND THEN THE MASK FRAME
	JSR &CALC_FRAME
	STA 66         	'MSK
	STY 67
	LDY #$71		'FINALLY...
&PENT_02	LDA AE00,Y          'READ BACKGROUND BUFFER
	AND (66),Y	'ONLY SHOW THROUGH MASKED BACKGROUND
	ORA (64),Y	'OR BITMAP
&PENT_01	STA B700,Y	'STORE RESULT TO CHARACTER GROUP
	DEY
	BPL &PENT_02
	LDX 02      	'NOW WORK OUT FIRST CHARACTER NUMBER OF CHARACTER GROUP
	TXA
	ASL
	ASL
	ASL
	ADC 02
	ADC #$110		'THIS IS THE FIRST CHARACTER
	LDX #08		'NEED TO DO THIS 9 TIMES (0-8)
&PENT_03	LDY AAFF,X	'CALCULATE OFFSET ON SCREEN
	STA (BB),Y	'STORE TO THAT OFFSET
	ADC #01		'NEXT CHARACTER
	DEX
	BPL &PENT_03
	LDX 02
&PENT_04	DEX         	'ONTO NEXT CREATURE
	BPL &PENT_05
'NOW PROCESS OBJECTS
	LDX #07		'PLOT OBJECTS (INCLUDES PROJECTILES)
&PENT_07	LDA 40,X
	BMI &PENT_06	'DON'T PLOT OBJECT IF NOT THEIR!
	LDA 38,X
	LDY 30,X
	JSR &CALC_PSN_LOCATION	'WORK OUT WHERE IT IS IN PSB
	LDA 50,X		'READ THE OBJECT CHARACTER NUMBER
	LDY #00
	STA (BB),Y	'AND STORE IT TO THE PSB
&PENT_06	DEX         	'ONTO NEXT OBJECT
	BPL &PENT_07
	RTS         	'THAT'S IT!!

&CALC_FRAME	'MULTIPLY BY 72, ADD C000 AND PLACE INTO A(L) & Y(H)
	LDY #00   'IS MULT_64 + MULT_8
	STY 69
	ASL
	ROL 69
	ASL
	ROL 69
	ASL
	ROL 69
	LDY 69
	STY 6B
	STA 6A
	ASL
	ROL 69
	ASL
	ROL 69
	ASL
	ROL 69
	ADC 6A
	PHA
	LDA 69
	ADC 6B
	ADC #C0
	TAY
	PLA
	RTS

&ATTEMPT_FIRE
	LDA #02
	STA ;HIT_FLAG
'DETECT ENEMY HERE
	RTS

&HERO_FRAME_CONTROL
	LDA 0213	'HERO FRAME
	CLC
	ADC #01
	AND #03
	STA 0213
	LDA 0214	'HERO DIRECTION
&HFC_03	ASL
	ASL
	ADC 0213
	TAX
	LDA AB08,X	':HEROFRAME_BMP_L,X
	STA 70
	LDA AB18,X	':HEROFRAME_BMP_H,X
	STA 71
	LDA AB28,X	':HEROFRAME_MSK_L,X
	STA 72
	LDA AB38,X	':HEROFRAME_MSK_H,X
	STA 73
&HFC_02	JSR &HERO_DEFS
	LDY #$71
&HFC_01	LDA AE00,Y
	AND (72),Y
	ORA (70),Y
	STA B700,Y
	DEY
	BPL &HFC_01
	RTS



&HERO_DEFS
	LDA #75
	STA BB
	LDA #A7
	STA BC
&DEFS_BUF	LDX #$08
&DBF_02	LDY AAFF,X
	LDA (BB),Y
	SEC
	SBC #$32
	ASL
	ASL
	ASL
	STA BD
	LDA #B5
	ADC #00
	STA BE
	TXA
	ASL
	ASL
	ASL
	STA BF
	LDA #AE
	STA C0
	LDY #07
&DBF_01	LDA (BD),Y
	STA (BF),Y
	DEY
	BPL &DBF_01
	DEX
	BPL &DBF_02
	RTS




&GET_CHAR	STY 1F
	JSR &LOCATE_BYTE
	CMP #20
	BCC &GCHR_01
	STA 07
	TAY
	LDA A93A,Y
	ASL
	ROL
	ROL
	AND #03
	PHA
	TYA
	SEC
	SBC #20
	AND #3F
	TAY
	PLA
	CMP AA3A,Y
	BEQ &GCHR_02
	STA AA3A,Y
'USING STANDARD BANK MEMORY AT THE MOMENT
	ASL
	ADC #9A
	PHA
	TYA
	ASL
	ASL
	ASL
	STA 08		'SOURCE BASE LO
	STA 0A		'CHARACTER BASE LO
	PLA
	ADC #00
	STA 09		'SOURCE BASE HI
	AND #01
	ADC #B5
	STA 0B	  	'CHARACTER BASE HI
	LDY #07
&GCHR_03	LDA (08),Y
	STA (0A),Y
	DEY
	BPL &GCHR_03
&GCHR_02	LDY 1F
	LDA 07
	CMP #$224
	BCS &GCHR_04
	SBC #$31
	AND #3F
	ADC #$31
&GCHR_01	RTS
&GCHR_04	SBC #$64
	RTS

&GET_COLOUR
	JSR &LOCATE_BYTE
	TAY
	LDA A93A,Y
	AND #07
	LDY 14
	RTS

&LOCATE_BYTE
	STY 14
	LDA 10
	AND #%00011100
	LSR             '/4
	LSR
	STA 1A	'XPOS_IN_ZONE
	LDA 10
	AND #03
	STA 1B	'XPOS_IN_BLOCK
	LDA 12
	AND #03         '*4
	ASL
	ASL
	ORA 1B
	STA 16	'OFFSET IN BLOCK
	LDA 12
	AND #%00011100
	ASL
	ORA 1A	'XPOS_IN_ZONE
	STA 15    'OFFSET IN ZONE
	LDA 10
	STA 17
	LDA 11
	ASL 17          '*8 (16 BIT)
	ROL
	ASL 17
	ROL
	ASL 17
	ROL
	STA 1D	'XPOS_IN_MAP
	LDA 13
	STA 17
	LDA 12
	AND #%11100000
	ASL
	ROL 17
	ASL
	ROL 17
	ORA 1D	'XPOS_IN_MAP
	ADC #10   'MAP BASE LO
	STA 18
	LDA 17
	ADC #3A   'MAP BASE HI
	STA 19
	LDY #00
	LDA (18),Y 'ZONE
	STY 19
	ASL        '*64 (16 BIT)
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	LDY 19
	ADC 15	'OFFSET IN ZONE
	BCC 01
	INY
	CLC
	ADC #10   'ZONE BASE LO
	STA 17
	TYA
	ADC #6A	'ZONE BASE HI
	STA 18
	LDY #00
	LDA (17),Y 'BLOCK
	STY 19
	ASL          '*16 (16 BIT)
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	ASL
	ROL 19
	LDY 19
	ADC 16              'OFFSET IN BLOCK
	BCC 01
	INY
	CLC
	ADC #10             'BLOCK BASE LO
	STA 15
	TYA
	ADC #8A             'BLOCK BASE HI
	STA 16
	LDY #00
	LDA (15),Y
	LDY 14
	RTS

&PLOT_HEX	PHA
	LSR
	LSR
	LSR
	LSR
	ORA #30
	CMP #3A
	BCC 02
	ADC #06
	TAX
	PLA
	AND #0F
	ORA #30
	CMP #3A
	BCC 02
	ADC #06
	RTS




&TEST1	LDA 01
	JSR &PLOT_HEX
	STX BF43
	STA BF44
	LDA 00
	JSR &PLOT_HEX
	STX BF46
	STA BF47
	RTS

'[A] RANGE 0-15
&MULT_43	STA 03	'MULTIPLE NUMBER BY 43 (WIDTH OF PSN)
	ASL
	STA 04
	ASL
	ASL
	STA 05
	LDY #00
	STY 06
	ASL
	ROL 06
	ASL
	ROL 06
	ADC 05
	BCC 03
	INC 06
	CLC
	ADC 04
	BCC 03
	INC 06
	CLC
	ADC 03
	BCC 02
	INC 06
	LDY 06
	RTS

&MOVE_ENTITIES_UP
	LDX #01
&MEU_03	LDA 2A,X
	BMI &MEU_02
	DEC 22,X
	BPL &MEU_02
	LDA #80
	STA 2A,X
&MEU_02	DEX
	BPL &MEU_03
	LDX #07
&MEU_05	LDA 40,X
	BMI &MEU_04
	DEC 38,X
	BPL &MEU_04
	LDA #80
	STA 40,X
&MEU_04	DEX
	BPL &MEU_05
	RTS

&MOVE_ENTITIES_DOWN
	LDX #01
&MED_03	LDA 2A,X
	BEQ &MED_02
	INC 22,X
	LDA 22,X
	CMP #$17
	BCC &MED_02
	LDA #80
	STA 2A,X
&MED_02	DEX
	BPL &MED_03
	LDX #07
&MED_05	LDA 40,X
	BMI &MED_04
	INC 38,X
	LDA 38,X
	CMP #$19
	BCC &MED_04
	LDA #80
	STA 40,X
&MED_04	DEX
	BPL &MED_05
	RTS

&MOVE_ENTITIES_LEFT
	LDX #01
&MEL_03	LDA 2A,X
	BMI &MEL_02
	DEC 20,X
	BPL &MEL_02
	LDA #80
	STA 2A,X
	JMP &MEL_01
&MEL_02	DEX
	BPL &MEL_03
	LDX #07
&MEL_05	LDA 40,X
	BMI &MEL_04
	DEC 30,X
	BPL &MEL_04
	LDA #80
	STA 40,X
&MEL_04	DEX
	BPL &MEL_05
	RTS

&MOVE_ENTITIES_RIGHT
	LDX #01
&MED_03	LDA 2A,X
	BMI &MED_02
	INC 30,X
	LDA 30,X
	CMP #$43
	BCC &MED_02
	LDA #80
	STA 2A,X
&MED_02	DEX
	BPL &MED_03
	LDX #07
&MED_05	LDA 40,X
	BMI &MED_04
	INC 30,X
	LDA 30,X
	CMP #$43
	BCC &MED_04
	LDA #80
	STA 40,X
&MED_04	DEX
	BPL &MED_05
	RTS

&MANAGE_CREATURES
	LDA ;YPOS_H	'CALCULATE POSITION IN ENVIRONMENT MATRIX
	ASL
	ASL
	ASL
	ASL
	ORA ;XPOS_H
	TAY
	LDA 0500,Y	'FETCH ENVIRONMENT SPECIFIC BYTE
	STA 74
	LDX #01
&MVC_14	LDA 2A,X
	BMI &CHECK_4NEW_CREATURE
	JSR &MOVE_CREATURE
	LDA 22,X	'CREATURE Y
	BMI &MVC_11
	CMP #$17
	BCS &MVC_11
	LDY 20,X	'CREATURE X
	BMI &MVC_11
	CPY #$41
	BCC &MVC_12
&MVC_11	LDA #80	 'IF DEEMED OFF THE SCENE, SET TO INACTIVE...
	STA 2A,X
	LDA 74
	ASL
	ASL
	ASL
	BMI &MVC_12 'HIGH PRIORITY, SO IGNORE THIS BIT...
	TAY
'I'VE DONE THIS THE WRONG WAY ROUND, HIGH PRIORITY CREATURES SHOULD HAVE THEIR
'EXIT DIRECTION RECORDED, HOWEVER, NEED TO SHUFFLE FORMATS TO STORE THE EXIT DIRECTION
	LDA 0400,Y  'IF LOW PRIORITY...
	BMI &MVC_12
	LDA 2C,X	  'ALSO STORE LAST DIRECTION BACK TO REGION SPRITE
	STA 0406,Y
&MVC_12	DEX
	BPL &MVC_14
&MANAGE_OBJECTS 'OBJECTS INCLUDE PROJECTILES
	LDX #07
&MVC_18	LDY 40,X
	BMI &MVC_19
	CPY #04
	BCS &MVC_19
	LDA :OBJECT_ACTION_L,Y
	STA &MVC_17+1
	LDA :OBJECT_ACTION_H,Y
	STA &MVC_17+2
&MVC_17	JSR 0000
&MVC_19	DEX
	BPL &MVC_18
	RTS

'NEED TO PLACE OBJECT (PROJECTILE) ACTION ROUTINES HEREON...


&CHECK_4NEW_CREATURE
	JSR &CALC_BOUNDS
	LDA 74	'ENVIRONMENT SPECIFIC BYTE...
	ASL       'CALCULATE CREATURE ATTRIBUTE GROUP
	ASL
	ASL	'CARRY SET IF ENVIRONMENT IS HIGH PRIORITY
	STA 24,X
	BCC &CFNC_01 'ENVIRONMENT IS LOW PRIORITY, SO CAN PLOT UP TO 2 CREATURES
	TXA       'IF ENVIRONMENT IS HIGH PRIORITY, THEN CHECK IF OTHER
	EOR #01	'CREATURE IS ACTIVE.
	TAY
	LDA 002A,Y
	BMI 03
'THIS IS FOR HIGH PRIORITY CREATURE. EXAMPLE: PRINCE REGENT, INNKEEPER, BARTON
	JMP &CFNC_17 'IF IT IS, DON'T ACTIVATE ANOTHER, BUT CHECK HIGH PRIORITY LOCS
'OK, SO AT THIS POINT ONWARDS, WE HAVE A LOW PRIORITY CREATURE THAT MAY BE BROUGHT ON
'FIRST, NEED TO WORK OUT IF THE CREATURE CAN FIND SOME GROUND TO APPROACH FROM, SO
'IF WE TAKE THE HERO'S HEADING, WE CAN DETERMINE THE APPROACH SIDE.
&CFNC_01  LDY 24,X		'FIRST, IS LOW PRIORITY CREATURE LOCATION SPECIFIC
	LDA 0407,Y	'WITHIN ENVIROMENT?
	AND #10
	BEQ &CFNC_18        'NO, SO LOOK AT HERO DIRECTION TO DETERMINE POSITION
	LDA 0407,Y          'YES, SO GET PREVIOUS/DEFAULT HEADING
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #03
	PHA
	STX 6C
	JSR &WHETHER_WITHIN_BOUNDS	'WITHIN BOUNDS?
	LDX 6C
	PLA
	BCC 03
	JMP &CFNC_17                  'NO, DON'T BRING ON!
'THIS IS FOR A LOW PRIORITY CREATURE WITH SPECIFIC LOCATION. EXAMPLE: SUPPING SERF
	STA 2C,X			'STORE DIRECTION
	JMP &CFNC_06                  'YES, SETUP OTHER BITS N BOBS
'THIS IS FOR A LOW PRIORITY CREATURE WITH MATRIX RANGED LOCATIONS. EXAMPLE: ORC, ROGUE
&CFNC_18	LDY ;DIRECTION
	BNE &CFNC_07
	LDA #00	'HERO IS FACING NORTH, SO NEED TO FACE CREATURE SOUTH AT TOP
	STA 22,X	'STORE Y
	STX 64
	LDX #$35	'LOOK AT PSB FOR GROUND (3 CHARACTERS)
&CFNC_05	LDY A661,X	'READ PSB LOCATION
	LDA A93A,Y	'CHECK THAT IT IS GROUND
	AND #%00111000
	BNE &CFNC_03
	LDY A662,X
	LDA A93A,Y
	AND #%00111000
	BNE &CFNC_03
	LDY A663,X
	LDA A93C,Y
	AND #%00111000
	BEQ &CFNC_04	'FOUND SUITABLE GROUND!
&CFNC_03	DEX
	BPL &CFNC_05
	JMP &CFNC_17	'NO GROUND FOUND!
&CFNC_04	TXA
	LDX 64
	STA 20,X
	LDA #02
	STA 2C,X
&CFNC_06	LDY 24,X	'GENERAL:STORE OTHER BITS N BOBS
	LDA 0400,Y
	AND #7F
	STA 26,X	'CREATURE LIFELINE
	LDA #00
	STA 28,X  'CREATURE FRAME/DELAY
	LDA 0407,Y
	AND #0F
	STA 2A,X  'CREATURE SPRITE
	LDA 0401,Y
	AND #80
	STA 2E,X  'CREATURE ALLEGIANCE
'	JSR &ENTRY_POINT_0
	JMP &CFNC_17
&CFNC_07	CPY #02
	BNE &CFNC_11
	LDA #$16	'HERO IS FACING SOUTH, SO NEED TO FACE CREATURE NORTH AT BOTTOM
	STA 22,X
	STX 64
	LDX #$35
&CFNC_10	LDY A8BB,X
	LDA A93A,Y
	AND #%00111000
	BNE &CFNC_08
	LDY A8BC,X
	LDA A93A,Y
	AND #%00111000
	BNE &CFNC_08
	LDY A8BD,X
	LDA A93A,Y
	AND #%00111000
	BEQ &CFNC_09
&CFNC_08	DEX
	BPL &CFNC_10
	JMP &CFNC_17	'NO GROUND FOUND!
&CFNC_09	TXA
	LDX 64
	STA 20,X
	LDA #00
	STA 2C,X
	JMP &CFNC_06
&CFNC_11	BCS &CFNC_15
	LDA #00	'HERO IS FACING WEST, SO NEED TO FACE CREATURE EAST AT LEFT
	STA 20,X
	LDA #63
	STA 00
	LDA #A8
	STA 01
	LDA #03
	STA 2C,X
&CFNC_16	STX 64
	LDX #$13
&CFNC_14	LDY #00
	LDA (00),Y
	TAY
	LDA A93A,Y
	AND #%00111000
	BNE &CFNC_13
	LDY #$43
	LDA (00),Y
	TAY
	LDA A93A,Y
	AND #%00111000
	BNE &CFNC_13
	LDY #$86
	LDA (00),Y
	TAY
	LDA A93A,Y
	AND #%00111000
	BEQ &CFNC_12
&CFNC_13	LDA #$43
	JSR &SUB_00
	DEX
	BNE &CFNC_14
	JMP &CFNC_17	'NO GROUND FOUND!
&CFNC_12	TXA
	LDX 64
	STA 22,X
	JMP &CFNC_06
&CFNC_15	LDA #01     'HERO IS FACING EAST, SO NEED TO FACE CREATURE WEST AT RIGHT
	STA 2C,X
	LDA #$39
	STA 20,X
	LDA #8B
	STA 00
	LDA #A8
	STA 01
	JMP &CFNC_16
&CFNC_17	LDA 74
	AND #$32
	BEQ &CNC_04	'LOW PRIORITY AREA
	JSR &CALC_BOUNDS
	LDX #$31	'NEED TO CHECK HIGH PRIORITY CREATURES
&CNC_03	STX 6C
	TXA
	ASL
	ASL
	ASL
	TAY
	LDA 0400,Y
	BMI &CNC_01	'IF HIGH PRIORITY, THEN GO CHECK THIS ONE
&CNC_02	LDX 6C
	DEX
	BPL &CNC_03
&CNC_04	RTS

&CNC_01	STY 24,X
	JSR &WHETHER_WITHIN_BOUNDS
	BCS &CNC_02
	TYA
	TAX
	LDY 24,X
	LDA 0400,Y
	AND #7F
	STA 26,X	'CREATURE LIFELINE
	LDA #00
	STA 28,X  'CREATURE FRAME/DELAY
	LDA 0407,Y
	AND #0F
	STA 2A,X	'CREATURE SPRITE
	LDA 0407,Y
	EOR #40	'FACE IN OPPOSITE DIRECTION TO WHEN IT EXITED SCREEN
	STA 0407,Y
	LSR
	LSR
	LSR
	LSR
	LSR
	AND #03
	STA 2C,X	'CREATURE DIRECTION
	LDA 0400,Y
	AND #80
	STA 2E,X	'CREATURE ALLEGIANCE
	RTS

&WHETHER_WITHIN_BOUNDS
	LDA 0406,Y
	AND #0F
	TAX
	LDA 0600,X
	LDY 0620,X
	CPY 65
	BCC &CNC_06
	BEQ 02
	BCS 04
	CMP 64
	BCC &CNC_06
	CPY 67
	BEQ 02
	BCS &CNC_06
	BNE 04
	CMP 66
	BCS &CNC_06
	LDA 0640,X
	LDY 0660,X
	CPY 69
	BCC &CNC_06
	BEQ 02
	BCS 04
	CMP 68
	BCC &CNC_06
	CPY 6B
	BCC 08
	BEQ 02
	BCS &CNC_06
	CMP 6A
	BCS &CNC_06
	LDY 6C
	SEC
	SBC  68
	STA 0022,Y	'YPOS
	LDA 0600,X
	SEC
	SBC  64
	STA 0020,Y	'XPOS
	CLC
	RTS
&CNC_06	SEC
	RTS

&CALC_BOUNDS
	LDA  ;XPOS_L
	SEC
	SBC  #14
	STA  64
	LDA  ;XPOS_H
	SBC  #00
	STA  65
	LDA  ;YPOS_L
	SBC  #08
	STA  68
	LDA  ;YPOS_H
	SBC  #00
	STA  69
	LDA  ;XPOS_L
	CLC
	ADC  #15
	STA  66
	LDA  ;XPOS_H
	ADC  #00
	STA  67
	LDA  ;YPOS_L
	ADC  #09
	STA  6A
	LDA  ;YPOS_H
	ADC  #00
	STA  6B
	RTS


'MOVE PROJECTILE
'ALL OBJECTS AND SPRITES MUST BE MOVED EVERYTIME THE HERO MOVES.
&PROJECTILE_UP
	LDY 38,X
	DEY
	BMI &MVC_20
	TYA
	LDY 30,X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_OBJECT_COLLISIONS
	BCS &MVC_20
	DEC 38,X
	RTS
&MVC_20	LDA #80
	STA 40,X
	RTS
&PROJECTILE_DOWN
	LDY 38,X
	INY
	CPY #$19
	BCS &MVC_20
	TYA
	LDY 30,X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_OBJECT_COLLISIONS
	BCS &MVC_20
	INC 38,X
	RTS
&PROJECTILE_LEFT
	LDA 38,X
	LDY 30,X
	DEY
	BMI &MVC_20
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_OBJECT_COLLISIONS
	BCS &MVC_20
	DEC 30,X
	RTS
&PROJECTILE_RIGHT
	LDA 38,X
	LDY 30,X
	INY
	CPY #$43
	BCS &MVC_20
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_OBJECT_COLLISIONS
	BCS &MVC_20
	INC 30,X
	RTS

&CALC_PSN_LOCATION
	ASL
	ASL
	ASL
	STA BB
	LDA #00
	STA BC
	LDA BB
	ASL
	ROL BC
	ASL
	ROL BC
	ADC BB
	STY BB
	BCC 03
	INC BC
	CLC
	ADC BB
	BCC 03
	INC BC
	CLC
	ADC #09
	STA BB
	LDA BC
	ADC #A6
	STA BC
	RTS

'RELIES HEAVILY UPON PREVIOUS PSN FRAME FOR COLLISION DETECTION
&MOVE_CREATURE
	DEC 0203	'CREATURE DELAY
	BPL &MVC_16
	LDA #$03
	STA 0203
	STX 64
	LDA 22,X			'NEED TO DELETE CREATURE SINCE LATER CHECKS
	LDY 20,X                      'MAY LOOK OVER CREATURES LOCATIONS FOR ACCESS
	JSR &CALC_PSN_LOCATION
	LDA #$95	'KNOWN GROUND
	LDX #08
&MVC_22	LDY AAFF,X
	STA (BB),Y
	DEX
	BPL &MVC_22

	LDX 64
	LDA 2E,X	'ALLEGIANCE FLAG
	LSR
	LSR
	LSR
	LSR
	LSR
	ORA 2C,X	'DIRECTION
	TAY       'CREATES ENTITY 8 LONG
	LDA :CREATURE_ACTION_L,Y
	STA &MVC_01+1
	LDA :CREATURE_ACTION_H,Y
	STA &MVC_01+2
'CHASE/EXPLORE L/R/U/D ETC?
&MVC_01	JSR 0000	'THIS MOVES THE CREATURE
	LDX 64	'NOW WORK ON SPRITE FRAMES
	LDY 2A,X
	BMI &MVC_16
	CPY #08 	'CREATURE SPRITES OVER 8 DON'T MOVE (STAGNANT)
	BCS &MVC_23	'IF STAGNANT
	LDA 28,X		'IF MOVERS, ALWAYS 2 FRAMES, SO WORK OUT NEXT
	EOR #01
	AND #01
	STA 28,X
	TYA     	'GET SPRITE NUMBER (0-6)
	ASL
	ASL
	ASL
	ASL	'NEED TO DO THIS, TO JUMP OVER MASK FRAMES
	STA 00
	LDA 2C,X  'READ DIRECTION (0-3)
	ASL       'NOW 0-6
	ADC 28,X  'ADD FRAME, SO 0-7
	ADC 00    'ADD SPRITE, SO 0-55
	STA 60,X  'BMP FRAME NUMBER 0-55
	ADC #$08	'ADD 8 TO GET RESPECTIVE MASK
	STA 62,X	'MSK FRAME NUMBER
&MVC_16	RTS
&MVC_23   TYA
	SEC
	SBC #08
	TAY
	LDA :FRAME_STYLE_L,Y	'RIGHT, NOW FOR THE STAGNANT CREATURES
	STA &MVC_24+1                 'THESE REQUIRE A BIT MORE PROCESSING TO GET
	LDA :FRAME_STYLE_H,Y	'THE FRAMES RIGHT
	STA &MVC_24+2
	CLC
&MVC_24	JMP 0000                      'SO JUST JUMP TO THE CREATURE

&FST_08   LDA 28,X		'SUPPING SERF
	ADC #01
	AND #0F
	STA 28,X
	TAY
	LDA AB6D,Y	'SUPPING SERF SEQUENCE FRAMES
	STA 60,X
	ADC #05
	STA 62,X
	RTS

&FST_09	LDA 28,X		'DRINKING SERF
	ADC #01
	AND #0F
	STA 28,X
	TAY
	LDA AB7D,Y	'DRINKING SERF SEQUENCE FRAME
	STA 60,X
	ADC #05
	STA 62,X
	RTS

&FST_0A   LDA 28,X		'INNKEEPER
	ADC #01
	AND #0F
	STA 28,X
	TAY
	LDA AB5D,Y	':INNKEEPER_SEQUENCE_FRAME,Y
	STA 60,X
	ADC #05
	STA 62,X
	RTS

&FST_0B	LDA #$166		'SENTRY
	STA 60,X
	LDA #$167
	STA 62,X
	RTS

&FST_0C   LDA #$168		'SLEEPING PEASANT
	STA 60,X
	LDA #$169
	STA 62,X
	RTS

&FST_0D   LDA #$178		'SEATED ROYAL
	STA 60,X
	LDA #$179
	STA 62,X
	RTS

&FST_0E   LDA 28,X		'DYING
	ADC #01
	AND #03
	STA 28,X
	BEQ &MVC_05
	ADC #$170
	STA 60,X
	ADC #$04
	STA 62,X
	RTS

&MVC_CT0  LDY 22,X  	'FRIEND EXPLORE UP
	DEY
	BMI &MVC_05
	TYA
	LDY 20,X	'CREATURE X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_04
	DEC 22,X
	RTS

&MVC_04   LDA 2C,X		'HIT SOMETHING, SO TURN
	BMI &MVC_06	'OR BRANCH IF GUARD
	ADC #01
	AND #03
	STA 2C,X
	RTS
&MVC_06   EOR #02             'AND IF GUARD, TURN TO FACE OPPOSITE DIRECTION
	STA 2C,X
	RTS

&MVC_05	LDA 2C,X	'THE CREATURE HAS LEFT THE SCENE
	ASL	'SO NEED TO PUT BACK THE DIRECTION THE CREATURE WAS FACING WHEN
	ASL	'IT LEFT THE SCENE.
	ASL
	ASL
	ASL
	STA 65
	LDY 24,X
	LDA 0407,Y
	AND #%10011111
	ORA 65
	STA 0407,Y
	LDA #80	'ALSO DEACTIVATE IT
	STA 2A,X
	RTS

&MVC_CT1  LDA 22,X		'FRIEND EXPLORE LEFT
	LDY 20,X
	DEY
	BMI &MVC_05
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_04
	DEC 20,X
	RTS

&MVC_CT2	LDY 22,X		'FRIEND EXPLORER DOWN
	INY
	CPY #$17
	BCS &MVC_05
	TYA
	LDY 20,X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_04
	INC 22,X
	RTS

&MVC_CT3  LDA 22,X		'FRIEND EXPLORER RIGHT
	LDY 20,X
	INY
	CPY #$41
	BCS &MVC_05
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_04
	INC 20,X
	RTS

&MVC_CTA	LDY 20,X		'FOE CHASE
	LDA 22,X
	CPY #$20            'SO LOOK FOR HERO IN X DIRECTION
	BEQ &MVC_08
	BCS &MVC_07
'ATTEMPT RIGHT
	INY
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_08
	LDA #03
	STA 2C,X
	INC 20,X
	JMP &MVC_10
'ATTEMPT LEFT
&MVC_07	DEY
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_08
	LDA #01
	STA 2C,X
	DEC 20,X
	JMP &MVC_10
&MVC_08	LDY 22,X		'OR IF X MATCHED, LOOK FOR HERO IN Y DIRECTION
	CPY #$08
	BCC &MVC_09
'ATTEMPT_UP
	DEY
	TYA
	LDY 20,X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_10
	LDA #00
	STA 2C,X
	DEC 22,X
	JMP &MVC_10
'ATTEMPT DOWN
&MVC_09	INY
	TYA
	LDY 20,X
	JSR &CALC_PSN_LOCATION
	JSR &CHECK_CREATURE_COLLISIONS
	BCS &MVC_10
	LDA #02
	STA 2C,X
	INC 22,X
&MVC_10	RTS

&CHECK_OBJECT_COLLISIONS
	LDY #00
	LDA (BB),Y
	CMP #$96
	BCS &COC_01
	TAY
	LDA A93A,Y
	AND #%00111000
	CMP #01
&COC_01	RTS

&CHECK_CREATURE_COLLISIONS
	LDX #08
&MVC_02	LDY AAFF,X
	LDA (BB),Y
'THIS WILL ONLY WORK IF THE 64 SET OBSERVES COLLISION FOR SET CHARS
'BUT IT WOULD VASTLY SPEED UP THE PROCESSING
	TAY
	LDA A93A,Y
	AND #%00111000
	CMP #01
	BCS &MVC_03
	DEX
	BPL &MVC_02
&MVC_03	RTS


&GET_KEYS	LDX #06
	LDA #00
	STA 0208
	LDA BFE8	'
	BMI 02
	LDX #01
	LDY #DD
&GKEYS_01	LDA AB94,X
	STA 0300
	LDA #0E
	STA 030F
	LDA #FF
	STA 030C
	STY 030C
	LDA AB8D,X
	STA 030F
	LDA #FD
	STA 030C
	STY 030C
&GKEYS_04	ADC #01
	BCC &GKEYS_04
	LDA 0300
	AND #08
	BEQ &GKEYS_03
	LDA 0208
	ORA ABA2,X
	STA 0208
&GKEYS_03	DEX
	BPL &GKEYS_01
'	LDA BFE8
'	BPL &GKEYS_02
'NOW READ JOYSTICK
&GKEYS_02	RTS


~END
